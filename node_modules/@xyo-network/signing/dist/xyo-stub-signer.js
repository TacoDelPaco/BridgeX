"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Thursday, 29th November 2018 4:40:40 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-stub-signer.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Thursday, 13th December 2018 10:18:13 am
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoStubSigner = void 0;
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoStubSigner extends serialization_1.XyoBaseSerializable {
    constructor(publicKey, signature) {
        super(serialization_schema_1.schema);
        this.publicKey = publicKey;
        this.signature = signature;
        this.schemaObjectId = serialization_schema_1.schema.stubSigner.id;
    }
    get privateKey() {
        return 'abc';
    }
    getReadableValue() {
        return this.privateKey;
    }
    getData() {
        return [
            this.publicKey,
            this.signature
        ];
    }
    signData(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.signature;
        });
    }
}
exports.XyoStubSigner = XyoStubSigner;
// tslint:disable-next-line:max-classes-per-file
class XyoStubSignerDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.stubSigner.id;
    }
    deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        const query = new serialization_1.ParseQuery(parseResult);
        return new XyoStubSigner(serializationService.deserialize(query.getChildAt(0).readData(true)).hydrate(), serializationService.deserialize(query.getChildAt(1).readData(true)).hydrate());
    }
}
XyoStubSigner.deserializer = new XyoStubSignerDeserializer();
//# sourceMappingURL=xyo-stub-signer.js.map