"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Thursday, 29th November 2018 4:46:25 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-stub-signature.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Friday, 14th December 2018 12:31:06 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoStubSignature = void 0;
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoStubSignature extends serialization_1.XyoBaseSerializable {
    static deserialize(data, serializationService) {
        const parsed = serializationService.parse(data);
        return new XyoStubSignature(parsed.data.toString('hex'));
    }
    constructor(desiredSignatureHexString, validData) {
        super(serialization_schema_1.schema);
        this.desiredSignatureHexString = desiredSignatureHexString;
        this.validData = validData;
        this.schemaObjectId = XyoStubSignature.schemaObjectId;
    }
    verify(data, _publicKey) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.validData) {
                return data.equals(this.validData);
            }
            return true;
        });
    }
    get encodedSignature() {
        return Buffer.from(this.desiredSignatureHexString, 'hex');
    }
    getData() {
        return this.encodedSignature;
    }
    getReadableValue() {
        return this.encodedSignature.toString('hex');
    }
}
exports.XyoStubSignature = XyoStubSignature;
XyoStubSignature.schemaObjectId = serialization_schema_1.schema.stubSignature.id;
//# sourceMappingURL=xyo-stub-signature.js.map