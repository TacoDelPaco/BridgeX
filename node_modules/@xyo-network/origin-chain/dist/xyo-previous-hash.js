"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Friday, 7th December 2018 1:16:16 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-previous-hash.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Thursday, 13th December 2018 11:51:36 am
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoPreviousHash = void 0;
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoPreviousHash extends serialization_1.XyoBaseSerializable {
    constructor(hash, original) {
        super(serialization_schema_1.schema, original);
        this.hash = hash;
        this.schemaObjectId = serialization_schema_1.schema.previousHash.id;
    }
    getData() {
        return [this.hash];
    }
    getReadableValue() {
        return this.hash.getReadableValue();
    }
}
exports.XyoPreviousHash = XyoPreviousHash;
// tslint:disable-next-line:max-classes-per-file
class XyoPreviousHashDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.previousHash.id;
    }
    deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        const query = new serialization_1.ParseQuery(parseResult);
        return new XyoPreviousHash(serializationService.deserialize(query.getChildAt(0).readData(true)).hydrate(), data);
    }
}
XyoPreviousHash.deserializer = new XyoPreviousHashDeserializer();
//# sourceMappingURL=xyo-previous-hash.js.map