/// <reference types="node" />
import { XyoBase } from '@xyo-network/base';
import { IXyoBoundWitness } from '@xyo-network/bound-witness';
import { IXyoHash } from '@xyo-network/hashing';
import { IXyoSerializationService } from '@xyo-network/serialization';
import { IXyoPublicKey, IXyoSigner } from '@xyo-network/signing';
import { IXyoStorageProvider } from '@xyo-network/storage';
import { IBlockInOriginChainResult, IXyoOriginChainMutex, IXyoOriginChainRepository } from './@types';
export declare class XyoOriginChainLocalStorageRepository extends XyoBase implements IXyoOriginChainRepository {
    private readonly storageProvider;
    private readonly originBlockResolver;
    private readonly serializationService;
    private inMemoryDelegate;
    constructor(storageProvider: IXyoStorageProvider, originBlockResolver: IXyoOriginBlockByHash, serializationService: IXyoSerializationService);
    acquireMutex(): Promise<IXyoOriginChainMutex | undefined>;
    releaseMutex(mutex: IXyoOriginChainMutex): Promise<void>;
    canAcquireMutex(): Promise<boolean>;
    isBlockInOriginChain(block: IXyoBoundWitness, hash: IXyoHash): Promise<IBlockInOriginChainResult>;
    publicKeyBelongsToOriginChain(publicKey: IXyoPublicKey): Promise<boolean>;
    getAllPublicKeysForOriginChain(): Promise<IXyoPublicKey[]>;
    getOriginChainHashes(): Promise<IXyoHash[]>;
    getInteractionWithPublicKey(publicKey: IXyoPublicKey): Promise<IXyoHash[]>;
    createGenesisBlock(): Promise<IXyoBoundWitness>;
    getIndex(): Promise<number>;
    getPreviousHash(): Promise<IXyoHash | undefined>;
    getGenesisSigner(): Promise<IXyoSigner | undefined>;
    getSigners(): Promise<IXyoSigner[]>;
    addSigner(signer: IXyoSigner): Promise<void>;
    removeOldestSigner(): Promise<void>;
    getNextPublicKey(): Promise<IXyoPublicKey | undefined>;
    getWaitingSigners(): Promise<IXyoSigner[]>;
    updateOriginChainState(hash: IXyoHash, block: IXyoBoundWitness): Promise<void>;
    setCurrentSigners(signers: IXyoSigner[]): Promise<void>;
    private getOrCreateInMemoryDelegate;
    private saveOriginChainState;
    private deserializeOriginChainState;
    private serializeOriginChainState;
}
interface IXyoOriginBlockByHash {
    getOriginBlockByHash(hash: Buffer): Promise<IXyoBoundWitness | undefined>;
}
export {};
//# sourceMappingURL=xyo-origin-chain-local-storage-repository.d.ts.map