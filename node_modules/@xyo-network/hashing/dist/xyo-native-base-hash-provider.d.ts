/// <reference types="node" />
import { IXyoHashProvider, IXyoHash } from './@types';
/**
 * A hash provider that wraps and utilizes the natives nodejs hash functionality
 */
export declare class XyoNativeBaseHashProvider implements IXyoHashProvider {
    private readonly hashAlgorithm;
    private readonly hashObjectSchemaId;
    /**
     * Creates a new instance of a XyoNativeBaseHashProvider
     * @param hashAlgorithm A natively supported hash algorithm. Any item from `crypto.getHashes()` should work
     * @param xyoHashClass A class reference to the type of XyoHash this is
     */
    constructor(hashAlgorithm: string, hashObjectSchemaId: number);
    /**
     * Creates a hash from the data provided
     * @param data An arbitrary buffer to hash
     */
    createHash(data: Buffer): Promise<IXyoHash>;
    /**
     * Verifies the data passed hashes to the hash provides.
     * @param data The original data
     * @param hash The supposed hash of the original data
     */
    verifyHash(data: Buffer, hash: Buffer): Promise<boolean>;
}
//# sourceMappingURL=xyo-native-base-hash-provider.d.ts.map