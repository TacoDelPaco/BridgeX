"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Tuesday, 26th February 2019 12:13:50 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-sha3-hash-provider.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Tuesday, 26th February 2019 12:40:40 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable-next-line:no-reference
/// <reference path="./@types/eth-lib.d.ts" />
const eth_lib_1 = require("eth-lib");
const xyo_hash_1 = require("./xyo-hash");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoSha3HashProvider {
    createHash(data) {
        return __awaiter(this, void 0, void 0, function* () {
            const hash = eth_lib_1.hash.keccak256(data.toString());
            const bufHash = Buffer.from(hash.slice(2), 'hex');
            return new xyo_hash_1.XyoHash(bufHash, this, serialization_schema_1.schema.sha3Hash.id);
        });
    }
    verifyHash(data, hash) {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.createHash(data)).getHash().equals(hash);
        });
    }
}
exports.XyoSha3HashProvider = XyoSha3HashProvider;
//# sourceMappingURL=xyo-sha3-hash-provider.js.map