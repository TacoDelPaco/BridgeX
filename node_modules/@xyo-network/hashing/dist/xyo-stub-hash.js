"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Friday, 30th November 2018 1:02:10 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-stub-hash.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 12th December 2018 12:19:30 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const xyo_base_hash_1 = require("./xyo-base-hash");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoStubHash extends xyo_base_hash_1.XyoBaseHash {
    constructor(hash) {
        super(serialization_schema_1.schema);
        this.hash = hash;
        this.schemaObjectId = serialization_schema_1.schema.stubHash.id;
    }
    static deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        return new XyoStubHash(parseResult.data);
    }
    getHash() {
        return this.hash;
    }
    verifyHash(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return true;
        });
    }
}
XyoStubHash.schemaObjectId = serialization_schema_1.schema.stubHash.id;
exports.XyoStubHash = XyoStubHash;
//# sourceMappingURL=xyo-stub-hash.js.map