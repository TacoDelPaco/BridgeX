"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const create_1 = require("./create");
const utils_1 = require("@xyo-network/utils");
const debug_1 = __importDefault(require("debug"));
class ReadJSONCharacteristic extends utils_1.Subscribe {
    constructor(name, uuid) {
        super();
        this.name = name;
        this.uuid = uuid;
        this.logger = debug_1.default('bleno:read:json');
        this.characteristic = create_1.createReadCharacteristic({ name, uuid }, () => __awaiter(this, void 0, void 0, function* () {
            const value = yield this.awaitCurrentValue();
            return JSON.stringify(value);
        }), this.logger);
    }
}
exports.default = ReadJSONCharacteristic;
//# sourceMappingURL=json.js.map