import { PrimaryService } from '@abandonware/bleno';
import { WriteJSONCharacteristic } from '../../characteristics/write';
import { ReadStringCharacteristic } from '../../characteristics/read';
import { NotifyStringCharacteristic } from '../../characteristics/notify';
import { IWifiManager, IConnect } from '@xyo-network/pi-wifi-manager';
export default class NetworkService extends PrimaryService {
    wifiManager: IWifiManager;
    writeConnect: WriteJSONCharacteristic<IConnect>;
    notifyStatus: NotifyStringCharacteristic;
    notifySSID: NotifyStringCharacteristic;
    notifyIP: NotifyStringCharacteristic;
    readScan: ReadStringCharacteristic;
    validatePin: (pin: string) => Promise<boolean>;
    private unsubscribe;
    private logger;
    constructor(wifiManager: IWifiManager, validatePin: (pin: string) => Promise<boolean>);
    awaitScan(): Promise<string>;
    start(): void;
    stop(): void;
    private updateStatus;
    private connect;
}
//# sourceMappingURL=index.d.ts.map