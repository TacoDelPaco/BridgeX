/* eslint-disable @typescript-eslint/no-explicit-any */
import { Characteristic } from '@abandonware/bleno'
import debug from 'debug'
import { IBLECharacteristic } from '../../@types'
import { createWriteOptions } from './options'

type ICallback = (data: string) => void

export const createWriteCharacteristic = (
  { uuid, name }: IBLECharacteristic,
  updateCurrentValue: ICallback,
  logger = debug('bleno:write')
) => {
  const characteristic = new Characteristic(
    createWriteOptions({ uuid, name }, (data: Buffer, _offset: any, _withoutResponse: any, callback: any) => {
      try {
        logger(name)
        const body = data.toString('utf-8')
        logger(name, body)
        callback(characteristic.RESULT_SUCCESS)
        updateCurrentValue(body)
      } catch (err) {
        logger(name, err)
        callback(characteristic.RESULT_UNLIKELY_ERROR)
      }
    }) as any
  ) as any
  return characteristic
}
