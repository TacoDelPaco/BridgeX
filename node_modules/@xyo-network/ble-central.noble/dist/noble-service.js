"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const noble_characteristic_1 = require("./noble-characteristic");
const logger_1 = require("@xyo-network/logger");
class NobleService {
    constructor(service) {
        this.logger = new logger_1.XyoLogger(false, false);
        this.service = service;
    }
    get uuid() {
        return this.service.uuid;
    }
    get name() {
        return this.service.name;
    }
    get type() {
        return this.service.type;
    }
    get characteristics() {
        const returnArray = [];
        this.service.characteristics.forEach((characteristic) => {
            returnArray.push(new noble_characteristic_1.NobleCharacteristic(characteristic));
        });
        return returnArray;
    }
    discoverCharacteristics() {
        return new Promise((resolve, reject) => {
            this.logger.info(`Trying to discover characteristics for service with uuid: ${this.service.uuid}`);
            this.service.discoverCharacteristics([], (error, characteristics) => {
                if (error == null) {
                    this.logger.info(`Successfully discovered characteristics for service with uuid: ${this.service.uuid}`);
                    const returnArray = [];
                    characteristics.forEach((characteristic) => {
                        returnArray.push(new noble_characteristic_1.NobleCharacteristic(characteristic));
                    });
                    resolve(returnArray);
                }
                else {
                    this.logger.error(`Error discovering characteristics for service with uuid: ${this.service.uuid}`);
                    reject(error);
                }
            });
        });
    }
}
exports.NobleService = NobleService;
//# sourceMappingURL=noble-service.js.map