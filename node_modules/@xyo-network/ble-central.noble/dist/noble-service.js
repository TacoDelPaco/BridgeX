"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NobleService = void 0;
const logger_1 = require("@xyo-network/logger");
const noble_characteristic_1 = require("./noble-characteristic");
class NobleService {
    get uuid() {
        return this.service.uuid;
    }
    get name() {
        return this.service.name;
    }
    get type() {
        return this.service.type;
    }
    get characteristics() {
        const returnArray = [];
        this.logger.info(`characteristics() called`);
        this.service.characteristics.forEach((characteristic) => {
            this.logger.info(`characteristics().forEach() called`);
            returnArray.push(new noble_characteristic_1.NobleCharacteristic(characteristic));
        });
        return returnArray;
    }
    constructor(service) {
        this.logger = new logger_1.XyoLogger(false, false);
        this.service = service;
    }
    discoverCharacteristics() {
        // eslint-disable-next-line no-async-promise-executor
        this.logger.info(`Trying to discover characteristics for service with uuid: ${this.service.uuid}`);
        const returnArray = [];
        try {
            this.logger.info(`Successfully discovered characteristics for service with uuid: ${this.service.uuid}`);
            this.service.discoverCharacteristics([], (_, characteristics) => {
                for (const characteristic of characteristics) {
                    returnArray.push(new noble_characteristic_1.NobleCharacteristic(characteristic));
                }
                // characteristics.forEach((characteristic) => {
                //   returnArray.push(new NobleCharacteristic(characteristic))
                // })
                return returnArray;
            });
        }
        catch (e) {
            this.logger.error(`Error discovering characteristics for service with uuid: ${this.service.uuid}`);
            throw new Error(`discoverCharacteristics(): Error ${e}`);
        }
        return returnArray;
    }
}
exports.NobleService = NobleService;
//# sourceMappingURL=noble-service.js.map