/// <reference types="node" />
import { IXyoCharacteristic, IXyoDescriptor } from "@xyo-network/ble-central";
import noble from '@abandonware/noble';
import { XyoLogger } from '@xyo-network/logger';
export declare class NobleCharacteristic implements IXyoCharacteristic {
    get uuid(): string;
    get name(): string;
    get type(): string;
    get properties(): string[];
    get descriptors(): IXyoDescriptor[];
    notifyListeners: Array<(data: Buffer, isNotification: boolean) => void>;
    logger: XyoLogger;
    characteristic: noble.Characteristic;
    constructor(characteristic: noble.Characteristic);
    read(): Promise<Buffer>;
    write(value: Buffer): Promise<void>;
    discoverDescriptors(): Promise<IXyoDescriptor[]>;
    subscribe(): Promise<void>;
    unsubscribe(): Promise<void>;
    on(event: "notification", listener: (data: Buffer, isNotification: boolean) => void): this;
    private onNotify;
}
//# sourceMappingURL=noble-characteristic.d.ts.map