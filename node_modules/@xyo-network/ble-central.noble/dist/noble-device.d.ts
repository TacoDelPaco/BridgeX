import { IXyoAdvertisement, IXyoBluetoothDevice, IXyoService } from "@xyo-network/ble-central";
import { XyoLogger } from '@xyo-network/logger';
import noble from '@abandonware/noble';
export declare class NobleDevice implements IXyoBluetoothDevice {
    logger: XyoLogger;
    device: noble.Peripheral;
    lastSeen: number;
    get id(): string;
    get uuid(): string;
    get connectable(): boolean;
    get advertisement(): IXyoAdvertisement;
    get rssi(): number;
    get services(): IXyoService[];
    get state(): 'error' | 'connecting' | 'connected' | 'disconnecting' | 'disconnected';
    constructor(device: noble.Peripheral);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    updateRssi(): Promise<number>;
    discoverServicesForUuids(serviceUUIDs: string[]): Promise<IXyoService[]>;
    discoverServices(): Promise<IXyoService[]>;
}
//# sourceMappingURL=noble-device.d.ts.map