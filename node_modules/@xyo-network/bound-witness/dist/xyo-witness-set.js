"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Monday, 10th December 2018 11:18:52 am
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-witness-set.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 12th December 2018 1:51:54 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoWitnessSet extends serialization_1.XyoBaseSerializable {
    constructor(witnesses) {
        super(serialization_schema_1.schema);
        this.witnesses = witnesses;
        this.schemaObjectId = serialization_schema_1.schema.witnessSet.id;
    }
    getData() {
        return this.witnesses;
    }
    getReadableValue() {
        return this.witnesses.map(witness => witness.getReadableValue());
    }
}
exports.XyoWitnessSet = XyoWitnessSet;
// tslint:disable-next-line:max-classes-per-file
class XyoWitnessSetDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.witnessSet.id;
    }
    deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        const query = new serialization_1.ParseQuery(parseResult);
        const witnesses = query
            .mapChildren(fetter => serializationService
            .deserialize(fetter.readData(true))
            .hydrate());
        return new XyoWitnessSet(witnesses);
    }
}
exports.XyoWitnessSetDeserializer = XyoWitnessSetDeserializer;
XyoWitnessSet.deserializer = new XyoWitnessSetDeserializer();
//# sourceMappingURL=xyo-witness-set.js.map