"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Monday, 10th December 2018 11:32:18 am
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-bound-witness-fragment.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 12th December 2018 1:42:34 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoBoundWitnessFragment extends serialization_1.XyoBaseSerializable {
    constructor(fetterWitnesses) {
        super(serialization_schema_1.schema);
        this.fetterWitnesses = fetterWitnesses;
        this.schemaObjectId = serialization_schema_1.schema.boundWitnessFragment.id;
    }
    getData() {
        return this.fetterWitnesses;
    }
    getReadableValue() {
        return this.fetterWitnesses.map((fetterOrWitness) => {
            return fetterOrWitness.getReadableValue();
        });
    }
}
exports.XyoBoundWitnessFragment = XyoBoundWitnessFragment;
// tslint:disable-next-line:max-classes-per-file
class XyoBoundWitnessFragmentDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.boundWitnessFragment.id;
    }
    deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        const query = new serialization_1.ParseQuery(parseResult);
        const fetterWitnesses = query.mapChildren((fetterOrWitness) => {
            return serializationService
                .deserialize(fetterOrWitness.readData(true))
                .hydrate();
        });
        return new XyoBoundWitnessFragment(fetterWitnesses);
    }
}
XyoBoundWitnessFragment.deserializer = new XyoBoundWitnessFragmentDeserializer();
//# sourceMappingURL=xyo-bound-witness-fragment.js.map