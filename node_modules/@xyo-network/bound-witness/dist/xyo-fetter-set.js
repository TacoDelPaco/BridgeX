"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Monday, 10th December 2018 11:18:52 am
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-fetter-set.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 12th December 2018 1:49:02 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoFetterSetDeserializer = exports.XyoFetterSet = void 0;
const serialization_1 = require("@xyo-network/serialization");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
class XyoFetterSet extends serialization_1.XyoBaseSerializable {
    constructor(fetters) {
        super(serialization_schema_1.schema);
        this.fetters = fetters;
        this.schemaObjectId = serialization_schema_1.schema.fetterSet.id;
    }
    getData() {
        return this.fetters;
    }
    getReadableValue() {
        return this.fetters.map(fetter => fetter.getReadableValue());
    }
}
exports.XyoFetterSet = XyoFetterSet;
class XyoFetterSetDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.fetterSet.id;
    }
    deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        const query = new serialization_1.ParseQuery(parseResult);
        const fetters = query
            .mapChildren(fetter => serializationService
            .deserialize(fetter.readData(true))
            .hydrate());
        return new XyoFetterSet(fetters);
    }
}
exports.XyoFetterSetDeserializer = XyoFetterSetDeserializer;
XyoFetterSet.deserializer = new XyoFetterSetDeserializer();
//# sourceMappingURL=xyo-fetter-set.js.map