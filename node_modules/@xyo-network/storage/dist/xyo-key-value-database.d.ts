import { IXyoStorageProvider } from "./@types";
import { XyoBase } from "@xyo-network/base";
/**
 * Provides namespaces for an otherwise non-namespaced storage-provider
 *
 * @export
 * @class XyoKeyValueDatabase
 * @extends {XyoBase}
 */
export declare class XyoKeyValueDatabase extends XyoBase {
    private readonly storageProvider;
    private readonly namespaceKey;
    /**
     * Creates an instance of XyoKeyValueDatabase.
     * @param {IXyoStorageProvider} storageProvider The storage provider that will store the namespaces
     * @memberof XyoKeyValueDatabase
     */
    constructor(storageProvider: IXyoStorageProvider);
    /**
     * Get or creates a namespace in the storage provider. The `IXyoStorageProvider` returned
     * is a storage provider in the protected namespace
     *
     * @param {string} namespace
     * @returns {Promise<IXyoStorageProvider>}
     * @memberof XyoKeyValueDatabase
     */
    getOrCreateNamespace(namespace: string): Promise<IXyoStorageProvider>;
}
//# sourceMappingURL=xyo-key-value-database.d.ts.map