import { IArchivist, IBridgeConfigurationManager } from './@types';
export declare class BridgeConfigurationManager implements IBridgeConfigurationManager {
    getPublicKey(): Promise<string>;
    getPaymentKey(): Promise<string>;
    setPaymentKey(paymentKey: string): Promise<string>;
    setDefaultArchivist(id: string): Promise<IArchivist>;
    getDefaultArchivist(): Promise<IArchivist>;
    attachArchivist(dns: string, port: number): Promise<IArchivist>;
    detachArchivist(id: string): Promise<IArchivist>;
    getAttachedArchivists(): Promise<IArchivist[]>;
    verifyPin(pin: string): Promise<boolean>;
    updatePin(oldPin: string, newPin: string): Promise<boolean>;
    isConfigured(): Promise<boolean>;
    forceUpdate(): Promise<boolean>;
    factoryReset(): Promise<void>;
    checkForUpdates(): Promise<boolean>;
    lastResort(): Promise<boolean>;
    tailLog(pathname: string, n?: number): Promise<string>;
    getAptPackageVersion(): Promise<{
        latest: string;
        current: string;
    }>;
    getNpmPackageVersion(): Promise<{
        latest: string;
        current: string;
    }>;
}
//# sourceMappingURL=bridge-configuration-manager.d.ts.map