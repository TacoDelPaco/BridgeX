
export interface IArchivist {
  id?: string
  dns?: string
  port?: number
}

export interface Version {
  current: string
  latest: string
}

export interface IBridgeConfigurationManager {
  isConfigured(): Promise<boolean>
  getPublicKey(): Promise<string>
  getPaymentKey(): Promise<string>
  setPaymentKey(paymentKey: string): Promise<string>
  setDefaultArchivist(id: string): Promise<IArchivist>
  getDefaultArchivist(): Promise<IArchivist>
  getAttachedArchivists(): Promise<IArchivist[]>
  attachArchivist(dns: string, port: number): Promise<IArchivist>
  detachArchivist(id: string): Promise<IArchivist>
  verifyPin(pin: string): Promise<boolean>
  updatePin(oldPin: string, newPin: string): Promise<boolean>
  getAptPackageVersion(): Promise<Version>
  getNpmPackageVersion(): Promise<Version>
  forceUpdate(): Promise<boolean>
  checkForUpdates(): Promise<boolean>
  lastResort(): Promise<boolean>
  tailLog(pathname: string, n?: number): Promise<string>
  factoryReset(): Promise<void>
}
