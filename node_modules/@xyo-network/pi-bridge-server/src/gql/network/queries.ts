import { IStatus, getIp } from '@xyo-network/pi-wifi-manager'
import { IContext } from '../../@types'

export const networkQuery = () => ({
  async ip(parent: unknown, args: unknown, ctx: IContext): Promise<string | null | undefined> {
    console.log(parent, args, ctx)
    return getIp()
  },

  async port(_parent: unknown, _args: unknown, ctx: IContext): Promise<number> {
    return ctx.port
  },

  async url(_parent: unknown, _args: unknown, ctx: IContext): Promise<string | null> {
    const ip = getIp()
    if (!ip) return null
    return `http://${ ip }:${ ctx.port }`
  },

  async network(_parent: unknown, _args: unknown, { wifi }: IContext): Promise<IStatus | undefined> {
    return wifi.getStatus()
  },

  async scan(_parent: unknown, _args: unknown, { wifi }: IContext): Promise<IStatus[]> {
    return wifi.scan()
  }
})
