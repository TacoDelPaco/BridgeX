"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configurationQuery = void 0;
const withAuth_1 = __importDefault(require("../decorators/withAuth"));
const token_1 = require("../../token");
const configurationQuery = () => ({
    isConfigured: (parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.isConfigured();
    }),
    getAuthToken: (parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        const valid = yield configuration.verifyPin(args.pin);
        if (!valid)
            throw new Error('Invalid');
        return (0, token_1.sign)(args.pin);
    }),
    publicKey: (0, withAuth_1.default)((parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getPublicKey();
    })),
    paymentKey: (0, withAuth_1.default)((parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getPaymentKey();
    })),
    defaultArchivist: (0, withAuth_1.default)((parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getDefaultArchivist();
    })),
    archivists: (0, withAuth_1.default)((parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getAttachedArchivists();
    })),
    tailUnattendedUpgrade: (0, withAuth_1.default)((parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.tailLog('/var/log/unattended-upgrades/unattended-upgrades-dpkg.log');
    })),
    getAptPackageVersion: (parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getAptPackageVersion();
    }),
    getNpmPackageVersion: (parent, args, { configuration }) => __awaiter(void 0, void 0, void 0, function* () {
        return configuration.getNpmPackageVersion();
    })
});
exports.configurationQuery = configurationQuery;
//# sourceMappingURL=queries.js.map