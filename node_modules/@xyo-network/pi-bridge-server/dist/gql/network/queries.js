"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const pi_wifi_manager_1 = require("@xyo-network/pi-wifi-manager");
exports.networkQuery = () => ({
    ip(parent, args, ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            return pi_wifi_manager_1.getIp();
        });
    },
    port(parent, args, ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            return ctx.port;
        });
    },
    url(parent, args, ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            const ip = pi_wifi_manager_1.getIp();
            if (!ip)
                return null;
            return `http://${ip}:${ctx.port}`;
        });
    },
    network(parent, args, { wifi }) {
        return __awaiter(this, void 0, void 0, function* () {
            return wifi.getStatus();
        });
    },
    scan(parent, args, { wifi }) {
        return __awaiter(this, void 0, void 0, function* () {
            return wifi.scan();
        });
    }
});
//# sourceMappingURL=queries.js.map