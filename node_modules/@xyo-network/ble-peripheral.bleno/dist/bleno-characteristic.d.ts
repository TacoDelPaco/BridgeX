/// <reference types="node" />
import { Characteristic, Property } from '@abandonware/bleno';
import { IXyoMutableCharacteristic, IXyoMutableCharacteristicListener, IXyoMutableDescriptor, XyoMutablePermissions } from '@xyo-network/ble-peripheral';
export declare class BlenoCharacteristic implements IXyoMutableCharacteristic {
    private logger;
    private listenersMap;
    private notifyChangedCallback;
    characteristic: Characteristic;
    get uuid(): string;
    get permissions(): XyoMutablePermissions[];
    get value(): Buffer | undefined;
    set value(value: (Buffer | undefined));
    get descriptors(): IXyoMutableDescriptor[];
    constructor(uuid: string, properties: Property[]);
    onSubscribe: (_maxValueSize: number, updateValueCallback: (value: Buffer) => void) => Promise<void>;
    onUnsubscribe: () => Promise<void>;
    onWriteRequest: (data: Buffer, _offset: number, _withoutResponse: boolean, callback: (result: number) => void) => Promise<void>;
    onReadRequest: (_offset: number, callback: (result: number, data?: Buffer) => void) => Promise<void>;
    notifyChanged(): Promise<void>;
    addListener(key: string, listener: IXyoMutableCharacteristicListener): Promise<void>;
    removeListener(key: string): Promise<void>;
}
//# sourceMappingURL=bleno-characteristic.d.ts.map