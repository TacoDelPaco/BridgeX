import { XyoBase } from '@xyo-network/base';
import { CatalogueItem } from '@xyo-network/network';
import { IXyoCatalogueResolver, IXyoCategoryRouter } from '@xyo-network/peer-connections';
import { IXyoBoundWitnessHandlerProvider } from '@xyo-network/peer-interaction';
/**
 * A simple router to register handlers by route category.
 *
 * Uses `connect-like` or `express-like` like API to mount handlers.
 *
 * ```javascript
 *  router.use(category, handler)
 * ```
 */
export declare class XyoPeerInteractionRouter extends XyoBase implements IXyoCategoryRouter, IXyoCatalogueResolver {
    private readonly catalogueResolver?;
    private readonly handlersByCategory;
    /**
     * Creates an instance of XyoPeerInteractionRouter.
     * @param {IXyoCatalogueResolver} [catalogueResolver] If a catalogue resolver is supplied, it will be
     * used as a delegate to decide which category to choose in the event of a negotiation
     *
     * @memberof XyoPeerInteractionRouter
     */
    constructor(catalogueResolver?: IXyoCatalogueResolver | undefined);
    /**
     * Registers a handler for a particular category
     *
     * @param {CatalogueItem} catalogueItem
     * @param {handlerFactoryFn} handlerFactory
     * @memberof XyoPeerInteractionRouter
     */
    use(catalogueItem: CatalogueItem, handlerFactory: handlerFactoryFn): void;
    /**
     * Resolves a handler a based on a catalogue item.
     *
     * @param {CatalogueItem} catalogueItem
     * @returns {(IXyoBoundWitnessHandlerProvider | undefined)}
     * @memberof XyoPeerInteractionRouter
     */
    getHandler(catalogueItem: CatalogueItem): IXyoBoundWitnessHandlerProvider | undefined;
    /**
     * Resolves to a category when multiple category options are available
     *
     * @param {CatalogueItem[]} catalogueItems
     * @returns {(CatalogueItem | undefined)}
     * @memberof XyoPeerInteractionRouter
     */
    resolveCategory(catalogueItems: CatalogueItem[]): CatalogueItem | undefined;
}
export type handlerFactoryFn = () => IXyoBoundWitnessHandlerProvider;
//# sourceMappingURL=xyo-peer-interaction-router.d.ts.map