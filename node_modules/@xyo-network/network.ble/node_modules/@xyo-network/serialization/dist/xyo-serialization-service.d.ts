/// <reference types="node" />
import { BufferOrString, IXyoSerializationService, IXyoSerializableObject, IXyoDeserializer, IXyoObjectSchema, IParseResult } from "./@types";
import { XyoBase } from '@xyo-network/base';
import { XyoTreeIterator } from "./helpers/tree-iterator";
export declare class XyoSerializationService extends XyoBase implements IXyoSerializationService {
    readonly schema: IXyoObjectSchema;
    private recipes;
    constructor(schema: IXyoObjectSchema);
    serialize(serializable: IXyoSerializableObject, serializationType?: "buffer" | "hex" | undefined): BufferOrString;
    addDeserializer(deserializer: IXyoDeserializer<IXyoSerializableObject>): void;
    deserialize(deserializable: BufferOrString): XyoTreeIterator;
    parse(src: Buffer): IParseResult;
    hydrate<T extends IXyoSerializableObject>(deserializable: IParseResult): T;
    arrayOf<T extends IXyoSerializableObject>(tCollection: T[]): IXyoSerializableObject;
    typedArrayOf<T extends IXyoSerializableObject>(tCollection: T[]): IXyoSerializableObject;
    untypedArrayOf<T extends IXyoSerializableObject>(tCollection: T[]): IXyoSerializableObject;
    findFirstElement<T extends IXyoSerializableObject>(collection: IXyoSerializableObject[], schemaObjectId: number): T | undefined;
}
//# sourceMappingURL=xyo-serialization-service.d.ts.map