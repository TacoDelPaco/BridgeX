import { IXyoBoundWitnessSuccessListener } from "./@types";
import { IXyoBoundWitness, XyoBoundWitnessValidator } from "@xyo-network/bound-witness";
import { XyoBase } from "@xyo-network/base";
import { IXyoHashProvider } from "@xyo-network/hashing";
import { IXyoOriginChainRepository } from "@xyo-network/origin-chain";
import { IXyoOriginBlockRepository } from "@xyo-network/origin-block-repository";
import { CatalogueItem } from "@xyo-network/network";
import { IXyoContentAddressableService } from '@xyo-network/content-addressable-service';
export declare class XyoBoundWitnessSuccessListener extends XyoBase implements IXyoBoundWitnessSuccessListener {
    private readonly hashingProvider;
    private readonly boundWitnessValidator;
    private readonly originChainRepository;
    private readonly originBlockRepository;
    private readonly contentAddressableService;
    constructor(hashingProvider: IXyoHashProvider, boundWitnessValidator: XyoBoundWitnessValidator, originChainRepository: IXyoOriginChainRepository, originBlockRepository: IXyoOriginBlockRepository, contentAddressableService: IXyoContentAddressableService);
    onBoundWitnessSuccess(boundWitness: IXyoBoundWitness, mutex: any, choice: CatalogueItem): Promise<void>;
}
//# sourceMappingURL=xyo-bound-witness-success-listener.d.ts.map