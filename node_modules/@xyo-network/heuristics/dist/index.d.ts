/// <reference types="node" />
import { XyoBaseSerializable, IXyoDeserializer, IXyoSerializationService, IXyoObjectSchema } from '@xyo-network/serialization';
type NumberType = 'unsigned-integer' | 'signed-integer' | 'float' | 'double';
export declare class XyoSerializableNumber extends XyoBaseSerializable {
    readonly number: number;
    schemaObjectId: number;
    readonly numberType: NumberType;
    constructor(number: number, schema: IXyoObjectSchema, schemaObjectId: number, numberType: NumberType);
    getData(): Buffer;
    getReadableValue(): number;
}
export declare class XyoNumberDeserializer implements IXyoDeserializer<XyoSerializableNumber> {
    readonly schemaObjectId: number;
    readonly numberType: NumberType;
    constructor(schemaObjectId: number, numberType: NumberType);
    deserialize(data: Buffer, serializationService: IXyoSerializationService): XyoSerializableNumber;
}
export declare function getUnsignedIntegerSerializer(schema: IXyoObjectSchema, schemaObjectId: number): {
    deserializer: XyoNumberDeserializer;
    newInstance: (number: number) => XyoSerializableNumber;
};
export declare function getSignedIntegerSerializer(schema: IXyoObjectSchema, schemaObjectId: number): {
    deserializer: XyoNumberDeserializer;
    newInstance: (number: number) => XyoSerializableNumber;
};
export declare function getFloatSerializer(schema: IXyoObjectSchema, schemaObjectId: number): {
    deserializer: XyoNumberDeserializer;
    newInstance: (number: number) => XyoSerializableNumber;
};
export declare function getDoubleSerializer(schema: IXyoObjectSchema, schemaObjectId: number): {
    deserializer: XyoNumberDeserializer;
    newInstance: (number: number) => XyoSerializableNumber;
};
export {};
//# sourceMappingURL=index.d.ts.map