/// <reference types="node" />
import { XyoRsaShaSignerProvider } from "./xyo-rsa-sha-signer-provider";
import { IXyoDeserializer, IXyoSerializationService } from "@xyo-network/serialization";
import { XyoRsaSignature } from "./rsa-signature";
export { XyoRsaShaSigner } from "./xyo-rsa-sha-signer";
/** The types of signing algorithm supported */
declare type SignerProviderType = (
/** Will hash the data using sha256 before signing */
'rsa-sha256');
/**
 * Gets an instance of a `XyoRsaShaSignerProvider` signer provider
 *
 * @export
 * @param {SignerProviderType} signerProviderType
 * @returns {XyoRsaShaSignerProvider}
 */
export declare function getSignerProvider(signerProviderType: SignerProviderType): XyoRsaShaSignerProvider;
declare class XyoRsaWithSha256Signature implements IXyoDeserializer<XyoRsaSignature> {
    schemaObjectId: number;
    deserialize(data: Buffer, serializationService: IXyoSerializationService): XyoRsaSignature;
}
export declare const rsaWithSha256SignatureDeserializer: XyoRsaWithSha256Signature;
export { XyoRsaPublicKey } from './xyo-rsa-public-key';
//# sourceMappingURL=index.d.ts.map