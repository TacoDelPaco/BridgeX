"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Tuesday, 20th November 2018 3:23:43 pm
 * @Email:  developer@xyfindables.com
 * @Filename: xyo-rsa-public-key.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 12th December 2018 2:29:35 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
const serialization_schema_1 = require("@xyo-network/serialization-schema");
const serialization_1 = require("@xyo-network/serialization");
class XyoRsaPublicKey extends serialization_1.XyoBaseSerializable {
    /**
     * Creates a new instance of a XyoRsaPublicKey
     *
     * @param modulus The modulus in an RSA crypto key-pair
     */
    constructor(modulus) {
        super(serialization_schema_1.schema);
        this.modulus = modulus;
    }
    static deserialize(data, serializationService) {
        const parseResult = serializationService.parse(data);
        return new XyoRsaPublicKey(parseResult.data);
    }
    get schemaObjectId() {
        return XyoRsaPublicKey.schemaObjectId;
    }
    getData() {
        return this.modulus;
    }
    getReadableName() {
        return 'rsa-public-key';
    }
    getReadableValue() {
        return this.getRawPublicKey().toString('hex');
    }
    /**
     * The public exponent in the RSA crypto algorithm. Returns
     * the conventional (2 ^ 16) + (2^0) value used in many RSA configurations.
     */
    get publicExponent() {
        return Buffer.from([0x01, 0x00, 0x01]);
    }
    getRawPublicKey() {
        return this.modulus;
    }
}
XyoRsaPublicKey.schemaObjectId = serialization_schema_1.schema.rsaPublicKey.id;
exports.XyoRsaPublicKey = XyoRsaPublicKey;
//# sourceMappingURL=xyo-rsa-public-key.js.map