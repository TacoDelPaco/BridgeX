/// <reference types="node" />
import { IXyoSerializationService, XyoBaseSerializable } from '@xyo-network/serialization';
import { IXyoPublicKey } from '@xyo-network/signing';
export declare class XyoRsaPublicKey extends XyoBaseSerializable implements IXyoPublicKey {
    readonly modulus: Buffer;
    static schemaObjectId: number;
    static deserialize(data: Buffer, serializationService: IXyoSerializationService): XyoRsaPublicKey;
    /**
     * Creates a new instance of a XyoRsaPublicKey
     *
     * @param modulus The modulus in an RSA crypto key-pair
     */
    constructor(modulus: Buffer);
    get schemaObjectId(): number;
    getData(): Buffer;
    getReadableName(): string;
    getReadableValue(): string;
    /**
     * The public exponent in the RSA crypto algorithm. Returns
     * the conventional (2 ^ 16) + (2^0) value used in many RSA configurations.
     */
    get publicExponent(): Buffer;
    getRawPublicKey(): Buffer;
}
//# sourceMappingURL=xyo-rsa-public-key.d.ts.map