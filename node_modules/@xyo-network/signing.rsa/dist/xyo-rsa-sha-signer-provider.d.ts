/// <reference types="node" />
import { IXyoSignerProvider, IXyoSignature, IXyoPublicKey } from '@xyo-network/signing';
import { XyoRsaShaSigner } from './xyo-rsa-sha-signer';
import { XyoBase } from '@xyo-network/base';
/**
 * A service for providing RSA-SHA-256 signing services
 */
export declare class XyoRsaShaSignerProvider extends XyoBase implements IXyoSignerProvider {
    private readonly signingScheme;
    private readonly rsaSignatureObjectSchemaId;
    constructor(signingScheme: 'pkcs1-sha1' | 'pkcs1-sha256', rsaSignatureObjectSchemaId: number);
    /**
     * Returns a new instance of an rsa-signer
     */
    newInstance(fromPrivateKey?: any): XyoRsaShaSigner;
    /**
     * Verifies a a signature given the data that was signed, and a public key
     *
     * @param signature The signature to verify
     * @param data The data that was signed
     * @param publicKey The corresponding publicKey of public cryptography key-pair
     */
    verifySign(signature: IXyoSignature, data: Buffer, publicKey: IXyoPublicKey): Promise<boolean>;
}
//# sourceMappingURL=xyo-rsa-sha-signer-provider.d.ts.map