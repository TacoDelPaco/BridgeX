"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoBridgeQueue = void 0;
class XyoBridgeQueue {
    constructor(repo) {
        this.sendLimit = 100;
        this.removeWeight = 2;
        this.repository = repo;
    }
    addQueueItem(hash) {
        this.addQueueItemWithWeight(hash, 0);
    }
    addQueueItemWithWeight(hash, weight) {
        const item = {
            hash,
            weight
        };
        this.repository.addQueueItem(item);
    }
    getBlocksToBridge() {
        return this.repository.getLowestWeight(this.sendLimit);
    }
    onBlocksBridged(blocks) {
        const hashes = [];
        blocks.forEach((block) => {
            hashes.push(block.hash);
        });
        this.repository.incrementWeights(hashes);
    }
    getBlocksToRemove() {
        const blocks = this.repository.getQueue();
        const toRemoveHashes = [];
        blocks.forEach((block) => {
            if (block.weight >= this.removeWeight) {
                toRemoveHashes.push(block.hash);
            }
        });
        this.repository.removeHashes(toRemoveHashes);
        return toRemoveHashes;
    }
}
exports.XyoBridgeQueue = XyoBridgeQueue;
//# sourceMappingURL=xyo-bridge-queue.js.map