"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Tuesday, 20th November 2018 2:04:16 pm
 * @Email:  developer@xyfindables.com
 * @Filename: index.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Thursday, 13th December 2018 10:49:46 am
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.XyoEcdsaSignature = exports.XyoEcdsaSecp256k1UnCompressedPublicKey = exports.XyoEcdsaSecp256k1Signer = exports.getSignerProvider = void 0;
const errors_1 = require("@xyo-network/errors");
const hashing_1 = require("@xyo-network/hashing");
const serialization_schema_1 = require("@xyo-network/serialization-schema");
const xyo_ecdsa_secp256k1_signer_1 = require("./xyo-ecdsa-secp256k1-signer");
const xyo_ecdsa_secp256k1_signer_provider_1 = require("./xyo-ecdsa-secp256k1-signer-provider");
const xyo_ecdsa_secp256k1_uncompressed_public_key_1 = require("./xyo-ecdsa-secp256k1-uncompressed-public-key");
const xyo_ecdsa_signature_1 = require("./xyo-ecdsa-signature");
const xyo_ecdsa_signature_deserializer_1 = require("./xyo-ecdsa-signature-deserializer");
const xyo_ecdsa_uncompressed_public_key_deserializer_1 = require("./xyo-ecdsa-uncompressed-public-key-deserializer");
const signerProviderCache = {};
/**
 * Gets an instance of a `EcdsaSecp256k1` signer provider
 * @export
 * @param {SignerProviderType} signerProviderType
 * @returns {XyoEcdsaSecp256k1SignerProvider}
 */
function getSignerProvider(signerProviderType) {
    if (signerProviderCache[signerProviderType]) {
        return signerProviderCache[signerProviderType];
    }
    let signerProvider;
    switch (signerProviderType) {
        case 'secp256k1-sha256':
            const sha256HashingProvider = (0, hashing_1.getHashingProvider)('sha256');
            signerProvider = new xyo_ecdsa_secp256k1_signer_provider_1.XyoEcdsaSecp256k1SignerProvider(sha256HashingProvider, serialization_schema_1.schema.ecSecp256k1UncompressedPublicKey.id, serialization_schema_1.schema.ecdsaSecp256k1WithSha256Signature.id);
            break;
        default:
            throw new errors_1.XyoError(`Could not resolve signer provider type ${signerProviderType}`, errors_1.XyoErrors.INVALID_PARAMETERS);
    }
    return signerProvider;
}
exports.getSignerProvider = getSignerProvider;
var xyo_ecdsa_secp256k1_signer_2 = require("./xyo-ecdsa-secp256k1-signer");
Object.defineProperty(exports, "XyoEcdsaSecp256k1Signer", { enumerable: true, get: function () { return xyo_ecdsa_secp256k1_signer_2.XyoEcdsaSecp256k1Signer; } });
var xyo_ecdsa_secp256k1_uncompressed_public_key_2 = require("./xyo-ecdsa-secp256k1-uncompressed-public-key");
Object.defineProperty(exports, "XyoEcdsaSecp256k1UnCompressedPublicKey", { enumerable: true, get: function () { return xyo_ecdsa_secp256k1_uncompressed_public_key_2.XyoEcdsaSecp256k1UnCompressedPublicKey; } });
var xyo_ecdsa_signature_2 = require("./xyo-ecdsa-signature");
Object.defineProperty(exports, "XyoEcdsaSignature", { enumerable: true, get: function () { return xyo_ecdsa_signature_2.XyoEcdsaSignature; } });
xyo_ecdsa_signature_1.XyoEcdsaSignature.deserializer = new xyo_ecdsa_signature_deserializer_1.XyoEcdsaSignatureDeserializer(serialization_schema_1.schema.ecdsaSecp256k1WithSha256Signature.id, getSignerProvider('secp256k1-sha256'));
xyo_ecdsa_secp256k1_uncompressed_public_key_1.XyoEcdsaSecp256k1UnCompressedPublicKey.deserializer = new xyo_ecdsa_uncompressed_public_key_deserializer_1.XyoEcdsaUncompressedPublicKeyDeserializer(serialization_schema_1.schema.ecSecp256k1UncompressedPublicKey.id);
class XyoEcdsaSecp256k1SignerDeserializer {
    constructor() {
        this.schemaObjectId = serialization_schema_1.schema.ecdsaSecp256k1WithSha256Signer.id;
    }
    deserialize(data, serializationService) {
        const parseData = serializationService.parse(data);
        const privateKeyHex = parseData.dataBytes.toString();
        const signerProvider = getSignerProvider('secp256k1-sha256');
        return signerProvider.newInstance(privateKeyHex);
    }
}
xyo_ecdsa_secp256k1_signer_1.XyoEcdsaSecp256k1Signer.deserializer = new XyoEcdsaSecp256k1SignerDeserializer();
//# sourceMappingURL=index.js.map