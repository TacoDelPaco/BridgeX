import { IXyoNetworkProvider, IXyoNetworkProcedureCatalogue, IXyoNetworkPipe, CatalogueItem } from '@xyo-network/network';
import { IXyoPeerConnectionDelegate, IXyoPeerConnectionHandler } from './@types';
import { XyoBase } from '@xyo-network/base';
export declare class XyoSimplePeerConnectionDelegate extends XyoBase implements IXyoPeerConnectionDelegate {
    private readonly network;
    private readonly catalogue;
    private readonly peerConnectionHandler;
    constructor(network: IXyoNetworkProvider, catalogue: IXyoNetworkProcedureCatalogue, peerConnectionHandler: IXyoPeerConnectionHandler);
    provideConnection(): Promise<IXyoNetworkPipe>;
    stopProvidingConnections(): Promise<void>;
    doClientNegotiation(networkPipe: IXyoNetworkPipe): Promise<{
        pipe: IXyoNetworkPipe;
        serversChoice: CatalogueItem;
    }>;
    handlePeerConnection(networkPipe: IXyoNetworkPipe): Promise<void>;
    private getFirstMessage;
    private getClientCatalogue;
    private combineCatalogueItems;
    private getChoiceAndResponse;
}
//# sourceMappingURL=xyo-simple-peer-connection-delegate.d.ts.map