"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Wednesday, 28th November 2018 4:57:09 pm
 * @Email:  developer@xyfindables.com
 * @Filename: getNumberOfBytesRequiredForSizeBuffer.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 6th March 2019 4:42:51 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNumberOfBytesRequiredForSizeBuffer = void 0;
const errors_1 = require("@xyo-network/errors");
const getLeastNumberOfBytesToEncodeSize_1 = require("./getLeastNumberOfBytesToEncodeSize");
function getNumberOfBytesRequiredForSizeBuffer(byteLength, sizeIdentifierSize = null) {
    const { numberToEncode, bytesRequired } = (() => {
        switch (sizeIdentifierSize) {
            case 1:
                return { numberToEncode: 0, bytesRequired: 1 };
            case 2:
                return { numberToEncode: 1, bytesRequired: 2 };
            case 4:
                return { numberToEncode: 2, bytesRequired: 4 };
            case 8:
                return { numberToEncode: 3, bytesRequired: 8 };
            case null:
                const numberOfBytesRequired = (0, getLeastNumberOfBytesToEncodeSize_1.getLeastNumberOfBytesToEncodeSize)(byteLength);
                switch (numberOfBytesRequired) {
                    case 1:
                        return { numberToEncode: 0, bytesRequired: 1 };
                    case 2:
                        return { numberToEncode: 1, bytesRequired: 2 };
                    case 4:
                        return { numberToEncode: 2, bytesRequired: 4 };
                    case 8:
                        return { numberToEncode: 3, bytesRequired: 8 };
                }
            default:
                throw new errors_1.XyoError(`This should never happen exception`);
        }
    })();
    return bytesRequired, numberToEncode;
}
exports.getNumberOfBytesRequiredForSizeBuffer = getNumberOfBytesRequiredForSizeBuffer;
//# sourceMappingURL=getNumberOfBytesRequiredForSizeBuffer.js.map