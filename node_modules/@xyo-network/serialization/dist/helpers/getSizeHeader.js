"use strict";
/*
 * @Author: XY | The Findables Company <ryanxyo>
 * @Date:   Wednesday, 28th November 2018 4:57:39 pm
 * @Email:  developer@xyfindables.com
 * @Filename: getSizeHeader.ts
 * @Last modified by: ryanxyo
 * @Last modified time: Wednesday, 28th November 2018 5:17:42 pm
 * @License: All Rights Reserved
 * @Copyright: Copyright XY | The Findables Company
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSizeHeader = void 0;
const errors_1 = require("@xyo-network/errors");
const bn_js_1 = __importDefault(require("bn.js"));
function getSizeHeader(byteLength, bytesRequired) {
    let sizeBuffer = Buffer.alloc(bytesRequired);
    switch (bytesRequired) {
        case 1:
            sizeBuffer.writeUInt8(byteLength + 1, 0);
            break;
        case 2:
            sizeBuffer.writeUInt16BE(byteLength + 2, 0);
            break;
        case 4:
            sizeBuffer.writeUInt32BE(byteLength + 4, 0);
            break;
        case 8:
            sizeBuffer = new bn_js_1.default(byteLength + 8).toBuffer('be', 8);
            break;
        default:
            throw new errors_1.XyoError(`Could not serialize because size ${bytesRequired}`, errors_1.XyoErrors.INVALID_PARAMETERS);
    }
    return sizeBuffer;
}
exports.getSizeHeader = getSizeHeader;
//# sourceMappingURL=getSizeHeader.js.map