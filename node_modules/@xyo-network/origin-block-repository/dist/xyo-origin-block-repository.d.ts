/// <reference types="node" />
import { IXyoBoundWitness } from '@xyo-network/bound-witness';
import { IXyoHash, IXyoHashProvider } from '@xyo-network/hashing';
import { IXyoSerializationService } from '@xyo-network/serialization';
import { IXyoStorageProvider } from '@xyo-network/storage';
import { IOriginBlockQueryResult, IXyoOriginBlockRepository } from './@types';
/**
 * An XyoOriginChainNavigator exposes an api for managing
 * an origin chain
 */
export declare class XyoOriginBlockRepository implements IXyoOriginBlockRepository {
    private readonly originBlocksStorageProvider;
    private readonly serializationService;
    private readonly hashingProvider;
    /**
     * Creates an instance of a XyoOriginChainNavigator
     *
     * @param originBlocksStorageProvider A storage provider for storage management
     */
    constructor(originBlocksStorageProvider: IXyoStorageProvider, serializationService: IXyoSerializationService, hashingProvider: IXyoHashProvider);
    /**
     * Removes an origin block from storage if it exists
     *
     * @param originBlockHash The hash of the origin block to remove
     */
    removeOriginBlock(originBlockHash: Buffer): Promise<void>;
    /**
     * Returns true if the block exists in storage corresponding to the hash, false otherwise
     * @param originBlockHash The hash of the block to query
     */
    containsOriginBlock(originBlockHash: Buffer): Promise<boolean>;
    getOriginBlocks(limit: number, offsetHash?: Buffer): Promise<IOriginBlockQueryResult>;
    /**
     * Returns a list of all of origin blocks in the system
     */
    getAllOriginBlockHashes(): Promise<Buffer[]>;
    /**
     * Adds a bound-witness, which is an origin block, to storage. Additionally it updates
     * any indexes that need to be updated
     */
    addOriginBlock(blockHash: IXyoHash, originBlock: IXyoBoundWitness): Promise<void>;
    getOriginBlockByHash(hash: Buffer): Promise<IXyoBoundWitness | undefined>;
    getBlocksThatProviderAttribution(hash: Buffer): Promise<Record<string, IXyoBoundWitness>>;
    private recursivelyGetAllBlocksThatProvideAttribution;
}
//# sourceMappingURL=xyo-origin-block-repository.d.ts.map