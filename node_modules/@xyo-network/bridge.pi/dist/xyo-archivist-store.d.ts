import { IArchivist } from '@xyo-network/bridge-configuration';
import { IXyoTCPNetworkAddress } from '@xyo-network/network.tcp';
import { IXyoStorageProvider } from '@xyo-network/storage';
import { XyoBridgeArchivistQueue } from './xyo-bridge-archivist-queue';
export declare class XyoArchivistStore {
    archivistQueue: XyoBridgeArchivistQueue;
    store: IXyoStorageProvider;
    constructor(archivistQueue: XyoBridgeArchivistQueue, store: IXyoStorageProvider);
    getAttachedArchivistsForBridge: () => Promise<IArchivist[]>;
    detachArchivistForBridge: (id: string) => Promise<IArchivist>;
    attachArchivistToBridge: (dns: string, port: number) => Promise<IArchivist>;
    getDefaultArchivistForBridge: () => Promise<IArchivist>;
    setDefaultArchivistForBridge: (id: string) => Promise<IArchivist>;
    addArchivist: (archivist: IXyoTCPNetworkAddress) => Promise<void>;
    removeArchivist: (archivistToRemove: IXyoTCPNetworkAddress) => Promise<void>;
    restoreArchivists: (constArchivists: IXyoTCPNetworkAddress[]) => Promise<IXyoTCPNetworkAddress[]>;
    storeArchivists: (archivists: IXyoTCPNetworkAddress[]) => Promise<void>;
    getArchivists: () => Promise<IXyoTCPNetworkAddress[]>;
}
//# sourceMappingURL=xyo-archivist-store.d.ts.map