{"version":3,"sources":["gql/queries/authToken.js","gql/queries/archivists.js","gql/fragments/address.js","gql/accountClient.js","gql/queries/address.js","gql/queries/about.js","gql/cache.js","gql/mutations/updatePin.js","pin/index.js","gql/client.js","components/Layout/index.js","components/Logo/index.js","gql/queries/isConfigured.js","gql/error.js","components/PasswordInput/index.js","components/PasswordConfiguration/index.js","gql/queries/networkStatus.js","components/WifiStatus/responseToStatus.js","gql/queries/network.js","gql/mutations/connect.js","components/ConnectToWifi/index.js","components/WifiStatus/index.js","components/Navbar/index.js","routes/Login/index.js","gql/mutations/setPaymentKey.js","components/SetPaymentKey/index.js","components/NoneFound/index.js","components/Archivist/index.js","gql/mutations/attachArchivist.js","components/AddArchivist/index.js","gql/mutations/detachArchivist.js","components/UpdateArchivist/index.js","routes/Dashboard/Archivists.js","gql/mutations/claimBridge.js","components/UserInfo/index.js","components/ClaimBridge/index.js","gql/mutations/unclaimBridge.js","components/BridgeOwner/index.js","components/Owner/index.js","components/UpdatePin/index.js","components/Footer/index.js","routes/Dashboard/index.js","gql/queries/versions.js","gql/mutations/forceUpdate.js","gql/queries/tailUnattendedUpgrade.js","components/ForceUpdate/index.js","gql/mutations/lastResort.js","components/LastResort/index.js","gql/mutations/checkForUpdates.js","components/CheckForUpdates/index.js","routes/About/index.js","routes/index.js","index.js","App.js"],"names":["AUTH_TOKEN","gql","_templateObject","CONNECTED_ARCHIVISTS","archivists_templateObject","queries_archivists","_ref","children","react_default","a","createElement","react_apollo_esm","query","address_templateObject","authLink","setContext","o","headers","Object","objectSpread","X-Auth-Token","useXyAccountAccessToken","e","accountClient","ApolloClient","cache","InMemoryCache","link","concat","HttpLink","uri","process","ADDRESS_BY_DNS","queries_address_templateObject","ADDRESS_BY_PUBLIC_KEY","_templateObject2","addressQueryFactory","path","variables","skip","client","_ref2","data","loading","error","get","AddressByPublicKey","ABOUT_BRIDGE","about_templateObject","about","attachedArchivist","attachArchivist","state","readQuery","archivists","newArchivists","newState","setWith","clone","writeQuery","detachedArchivist","id","detachArchivist","filter","negate","obj","updatedPaymentKey","_ref3","setPaymentKey","updatedPin","_ref4","updatePin","pinProvider","value","claimedBridge","_ref5","addBridge","publicKey","addressByPublicKey","unclaimedBridge","_ref6","deleteBridge","UPDATE_PIN","updatePin_templateObject","mutations_updatePin","update","mutation","over","res","Promise","_res","_rej","rej","pinPromise","resolvePin","valid","usePinProvider","createContext","setPin","asyncToGenerator","regenerator_default","mark","_callee","pin","result","wrap","_context","prev","next","sent","stop","this","_x","apply","arguments","configurePin","_callee2","_context2","mutate","oldPin","newPin","_x2","Main","className","Page","components_Logo","style","version","xmlns","viewBox","height","d","BRIDGE_IS_CONFIGURED","isConfigured_templateObject","isConfigured","parseError","replace","PasswordInput","_useState","useState","_useState2","slicedToArray","setError","onSubmit","useRef","ev","target","preventDefault","password","t0","focus","Fragment","Form","name","type","placeholder","inputClassName","autoFocus","PasswordConfiguration","confirmPassword","trim","Error","BRIDGE_NETWORK_STATUS","networkStatus_templateObject","queries_networkStatus","errorPolicy","pollInterval","responseToStatus","BRIDGE_NETWORK","network_templateObject","network","notifyOnNetworkStatusChange","CONNECT_BRIDGE_WIFI","connect_templateObject","mutations_connect","refetchQueries","ConnectToWifi","open","closeModal","selected","selectNetwork","connect","ssid","Modal_default","onClose","aboutLoading","aboutError","refetch","networkStatus","Modal","headerClassName","title","react","Alert_default","Loader_default","Select_default","label","options","uniq","map","identity","onChange","onClick","Text_default","WifiStatus","setModal","setModalOpen","Wifi_default","status","withRouter","goBack","history","hidden","transparent","cx","navbar-hidden","bg-primary","push","join","networkStatusText","Login","Layout_Page","Layout_Main","Animate","timer","SET_PAYMENT_KEY","setPaymentKey_templateObject","mutations_setPaymentKey","SetPaymentKey","setOpen","_useState3","_useState4","paymentKey","_useState5","_useState6","address","_useState7","_useState8","web3Error","useEffect","updatePaymentKey","NoneFound","text","icon","components_Archivist","archivist","src","useBlockyImage","Card_default","alt","ATTACH_ARCHIVIST","attachArchivist_templateObject","mutations_attachArchivist","AddArchivist","onSuccess","setModalClosed","fn","dns","port","Number","DETACH_ARCHIVIST","detachArchivist_templateObject","mutations_detachArchivist","UpdateArchivist","Archivists","setArchivist","size","i","key","Icons_Archivist_default","CLAIM_BRIDGE","claimBridge_templateObject","mutations_claimBridge","UserInfo","onLogout","xya","useXyAccountContext","currentUser","user","setCurrentUser","uid","blocky","signOut","width","ClaimBridge","claimBridge","Login_default","buttonClassName","UNCLAIM_BRIDGE","unclaimBridge_templateObject","mutations_unclaimBridge","BridgeOwner","bridge","owner","isOwner","unclaimBridge","CenterLoader","Owner","isOffline","Owner_CenterLoader","fallback","UpdatePin","setClosed","form","Footer","react_router_dom","to","href","Dashboard","Info","Footer_Footer","BRIDGE_VERSIONS","versions_templateObject","versions","FORCE_UPDATE","forceUpdate_templateObject","mutations_forceUpdate","TAIL_UPGRADE","tailUnattendedUpgrade_templateObject","tailUnattendedUpgrade","ForceUpdate","logs","setLogs","toggleLogs","forceUpdate","Head_default","renderTitle","renderAction","Collapse","show","maxHeight","LAST_RESORT","lastResort_templateObject","mutations_lastResort","LastResort","lastResort","CHECK_FOR_UPDATES","checkForUpdates_templateObject","mutations_checkForUpdates","CheckForUpdates","checkForUpdates","BridgeVersionMessage","BridgeVersions","aptCurrent","aptLatest","text-danger","d-none","text-success","About","objectDestructuringEmpty","refetching","About_BridgeVersionMessage","About_BridgeVersions","routes","react_router","component","exact","ReactDOM","render","src_components_Navbar","document","getElementById"],"mappings":"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","file":"static/js/main.84d0821d.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nexport const AUTH_TOKEN = gql`\n  query AuthToken($pin: String) {\n    getAuthToken(pin: $pin)\n  }\n`","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const CONNECTED_ARCHIVISTS = gql`\n  query ConnectedArchivists {\n    archivists {\n      id\n      dns\n      port\n    }\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={CONNECTED_ARCHIVISTS}>{ children }</Query>\n)","import gql from 'graphql-tag'\n\nexport default gql`\n  fragment Address on Address {\n    id\n    name\n    owner\n    photoUrl\n    publicKey\n    multiaddr\n    dns\n    port\n  }\n`\n","import { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { useXyAccountAccessToken } from '@xyo-network/tool-storybook-react/dist/lib/auth/context'\n\nconst authLink = setContext((o, { headers }) => {\n  try {\n    return {\n      headers: {\n        'X-Auth-Token': useXyAccountAccessToken(),\n        ...headers,\n      },\n    }\n  } catch (e) {\n    return { headers }\n  }\n})\n\nexport default new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(new HttpLink({\n    uri: process.env.REACT_APP_ACCOUNT_GRAPHQL\n  })),\n})","import React from 'react'\nimport gql from 'graphql-tag'\nimport AddressFragment from '../fragments/address'\nimport accountClient from '../accountClient'\nimport { Query } from 'react-apollo'\nimport get from 'lodash/get'\n\nexport const ADDRESS_BY_DNS = gql`\n  query AddressByDNS($dns: String) {\n    addressByDNS(dns: $dns) {\n      id\n      name\n      owner\n      photoUrl\n      publicKey\n      multiaddr\n      dns\n      port\n    }\n  }\n`\n\nexport const ADDRESS_BY_PUBLIC_KEY = gql`\n  query AddressByPublicKey($publicKey: String) {\n    addressByPublicKey(publicKey: $publicKey) {\n      id\n      name\n      owner\n      photoUrl\n      publicKey\n      multiaddr\n      dns\n      port\n    }\n  }\n`\n\nconst addressQueryFactory = (query, path) => ({\n  variables,\n  children,\n  skip,\n}) => (\n  <Query \n    client={accountClient}\n    query={query} \n    variables={variables} \n    skip={skip}\n  >\n    {({ data, loading, error }) =>\n      children({ loading, error, data: get(data, path) })}\n  </Query>\n)\n\nexport const AddressByDNS = addressQueryFactory(ADDRESS_BY_DNS, 'addressByDNS')\nexport const AddressByPublicKey = addressQueryFactory(\n  ADDRESS_BY_PUBLIC_KEY,\n  'addressByPublicKey'\n)\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const ABOUT_BRIDGE = gql`\n  query AboutBridge {\n    publicKey\n    paymentKey\n    network {\n      ssid\n      ip\n    }\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={ABOUT_BRIDGE}>{ children }</Query>\n)","import { CONNECTED_ARCHIVISTS } from './queries/archivists'\nimport { ADDRESS_BY_PUBLIC_KEY } from './queries/address'\nimport { ABOUT_BRIDGE } from './queries/about'\nimport { pinProvider } from '../pin'\nimport setWith from 'lodash/setWith'\nimport negate from 'lodash/negate'\nimport clone from 'lodash/clone'\nimport get from 'lodash/get'\n\nconst isSameId = (id) => (obj) => id === get(obj, 'id')\n\nexport const attachedArchivist = (\n  cache,\n  { data: { attachArchivist } }\n) => {\n  const state = cache.readQuery({ query: CONNECTED_ARCHIVISTS })\n  const archivists = get(state, 'archivists') || []\n  const newArchivists = [].concat(archivists).concat(attachArchivist)\n  const newState = setWith(clone(state), 'archivists', newArchivists, clone)\n  cache.writeQuery({\n    query: CONNECTED_ARCHIVISTS,\n    data: newState\n  })\n}\n\nexport const detachedArchivist = (\n  cache,\n  { data: { detachArchivist } }\n) => {\n  const state = cache.readQuery({ query: CONNECTED_ARCHIVISTS })\n  const archivists = get(state, 'archivists') || []\n  const newArchivists = archivists.filter(negate(isSameId(detachArchivist.id)))\n  const newState = setWith(clone(state), 'archivists', newArchivists, clone)\n  cache.writeQuery({\n    query: CONNECTED_ARCHIVISTS,\n    data: newState\n  })\n}\n\n\nexport const updatedPaymentKey = (\n  cache,\n  { data: { setPaymentKey } }\n) => {\n  const state = cache.readQuery({ query: ABOUT_BRIDGE })\n  const newState = setWith(clone(state), 'paymentKey', setPaymentKey, clone)\n  cache.writeQuery({\n    query: ABOUT_BRIDGE,\n    data: newState\n  })\n}\n\nexport const updatedPin = (\n  cache,\n  { data: { updatePin } }\n) => {\n  pinProvider.value = updatePin\n}\n\nexport const claimedBridge = (\n  cache,\n  { data: { addBridge } }\n) => {\n  const publicKey = get(addBridge, 'publicKey')\n  const variables = { publicKey }\n  cache.writeQuery({\n    query: ADDRESS_BY_PUBLIC_KEY,\n    data: { addressByPublicKey: addBridge },\n    variables,\n  })\n\n}\n\nexport const unclaimedBridge = (\n  cache,\n  { data: { deleteBridge } }\n) => {\n  const publicKey = get(deleteBridge, 'id')\n  const variables = { publicKey }\n  cache.writeQuery({\n    query: ADDRESS_BY_PUBLIC_KEY,\n    data: { addressByPublicKey: null },\n    variables,\n  })\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { updatedPin } from '../cache'\nimport gql from 'graphql-tag'\nimport over from 'lodash/over'\n\nexport const UPDATE_PIN = gql`\n  mutation UpdatePin($oldPin: String, $newPin: String) {\n    updatePin(oldPin: $oldPin, newPin: $newPin)\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={UPDATE_PIN} update={over(updatedPin, update)}>\n    {children}\n  </Mutation>\n)","import { createContext } from 'react'\nimport { AUTH_TOKEN } from '../gql/queries/authToken'\nimport { UPDATE_PIN } from '../gql/mutations/updatePin'\nimport client from '../gql/client'\nimport get from 'lodash/get'\n\nlet [pinPromise, resolvePin, rejectPin] = (() => {\n  let res, rej\n  return [new Promise((_res, _rej) => {\n    res = _res\n    res = _rej\n  }), res, rej]\n})()\n\nexport const pinProvider = {\n  valid: false,\n  value: ''\n}\n\nexport const context = createContext(pinProvider)\n\nexport const usePinProvider = () => {\n  if (pinProvider.valid) return pinProvider\n  if (pinProvider.error) return pinProvider\n  throw pinPromise\n}\n\nexport const setPin = async (pin) => {\n  const result = await client.query({\n    query: AUTH_TOKEN,\n    variables: { pin }\n  })\n  pinProvider.value = get(result, 'data.getAuthToken')\n  pinProvider.valid = true\n  resolvePin(pinProvider)\n}\n\nexport const configurePin = async (pin) => {\n  await client.mutate({\n    mutation: UPDATE_PIN,\n    variables: { oldPin: 'xyxyo', newPin: pin }\n  })\n  await setPin(pin)\n}","import { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context'\nimport { pinProvider } from '../pin'\n\nconst authLink = setContext((o, { headers }) => {\n  try {\n    return {\n      headers: {\n        'X-Auth-Token': pinProvider.value,\n        ...headers,\n      },\n    }\n  } catch (e) {\n    return { headers }\n  }\n})\n\nexport default new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(new HttpLink()),\n})","import React from 'react'\n\nexport const Main = ({ children }) => (\n  <div className='container flex-grow-1 d-flex flex-column'>\n    <div className='flex-grow-1'></div>\n    <div className='row'>\n      <div className='offset-md-4 col-md-4'>\n        <div className='d-flex flex-column'>{children}</div>\n      </div>\n    </div>\n    <div className='flex-grow-2'></div>\n  </div>\n)\n\nexport const Page = ({ children }) => (\n  <div className='d-flex flex-column bg-primary flex-grow-1'>{children}</div>\n)","import React, { CSSProperties } from 'react'\nimport './index.css'\n\nexport default ({ style, className }) => (\n  <svg\n    version='1.1'\n    id='Layer_1'\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='0 0 180 180'\n    style={{ height: 80, ...style }}\n    className={className}\n  >\n    <g>\n      <path\n        className='logo-color-0'\n        d='M89.8,166.02c-13.33,0-26.66-0.1-39.99,0.07c-3.09,0.04-4.87-1.03-6.35-3.63\n\t\tc-13.06-22.84-26.18-45.65-39.37-68.41c-1.57-2.7-1.89-4.84-0.19-7.74c13.37-22.85,26.62-45.77,39.75-68.76\n\t\tc1.53-2.67,3.17-3.66,6.24-3.65c26.66,0.12,53.32,0.11,79.98,0.01c2.86-0.01,4.55,0.88,5.97,3.36\n\t\tc13.48,23.56,27.04,47.07,40.69,70.53c1.14,1.95,0.83,3.26-0.17,4.98c-13.44,23.19-26.88,46.39-40.2,69.66\n\t\tc-1.53,2.67-3.31,3.67-6.36,3.64C116.46,165.94,103.13,166.02,89.8,166.02z M58.07,30.98c-0.2,1.93-1.88,2.28-3.21,3.01\n\t\tc-1.83-1.9-2.14-4.86-4.67-6.73c-9.3,16.13-18.54,32.15-27.86,48.31c2.79,0.7,3.73-1.5,5.14-2.68\n\t\tc7.87-6.59,15.03-14.01,23.32-20.12c1.73,0.18,2.94,0.97,3.28,2.78C42.55,65.86,31.16,76.31,19.43,86.37\n\t\tc-3.35,2.87-3.91,4.35-0.33,7.43c11.33,9.75,22.39,19.82,33.54,29.76c-0.92,1.27-1.42,2.9-3.07,3.53\n\t\tc-4.07-3.68-8.12-7.39-12.23-11.03c-3.11-2.76-6.27-5.45-9.45-8.14c-0.9-0.76-2.07-1.59-3.15-0.79c-1.55,1.14,0.14,1.95,0.64,2.82\n\t\tc1.8,3.19,3.63,6.36,5.46,9.52c6.41,11.06,12.83,22.11,19.24,33.16c2.04-0.91,2.26-2.77,3.28-4.02c1.3,0.75,2.61,1.49,3.91,2.24\n\t\tc-2.41,5.04-2.41,5.05,3.15,5.05c7.48,0.01,14.96,0,22.43,0c9.69,0,19.39,0,29.08,0c0.05-0.3,0.09-0.6,0.14-0.9\n\t\tc-11.49-4.04-22.98-8.08-34.47-12.13c0.42-1.34,0.84-2.69,1.26-4.03c14.34,4.73,28.73,9.34,43,14.26c3.65,1.26,4.74,0.59,5.51-3.23\n\t\tc2.94-14.46,6.29-28.83,9.48-43.23c1.49,0.16,2.98,0.31,4.47,0.47c-2.14,9.91-4.24,19.83-6.47,29.72\n\t\tc-0.36,1.58-1.79,3.73-0.25,4.51c2.03,1.04,2.41-1.68,3.16-2.96c8-13.64,15.85-27.38,23.91-40.98c2.21-3.74,1.24-5.02-2.78-4.91\n\t\tc0-1.56,0-3.12,0-4.68c1.62-0.77,6.82,2.02,3.6-3.56c-8.15-14.11-16.33-28.19-24.53-42.27c-0.71-1.22-1.18-2.84-3.28-2.8\n\t\tc2.26,11.23,4.51,22.4,6.76,33.56c-1.51,0.3-3.01,0.61-4.52,0.91c-2.92-14.1-6.1-28.16-8.63-42.34c-0.8-4.5-2.51-4.44-5.93-3.34\n\t\tc-14.5,4.68-29.05,9.23-43.58,13.83c-0.61-1.48-1.22-2.95-1.83-4.43c12.15-3.86,24.3-7.73,36.45-11.59\n\t\tc-17.19-1.12-34.11-1.12-51.03-1.12C55.33,24.71,55.33,24.71,58.07,30.98z'\n      />\n      <path\n        className='logo-color-1'\n        d='M128.25,79.14c2.7-2.12,5.39-4.26,8.67-5.45c1.51-0.3,3.01-0.61,4.52-0.91c9.23,1.07,15.08,6.06,17.46,15.07\n\t\tc0,1.56,0,3.12,0,4.68c-2.59,8.8-7.99,14.22-17.57,14.61c-1.49-0.16-2.98-0.31-4.47-0.47c-3.22-1.37-5.91-3.54-8.59-5.71\n\t\tc-0.49-1.64-1.36-3.03-2.74-4.07c-0.63-4.65-1.02-9.29,0.48-13.87C127.17,81.97,127.78,80.6,128.25,79.14z M141.57,102.13\n\t\tc6.54,0.1,12.31-5.43,12.36-11.85c0.05-6.54-5.5-12.22-11.97-12.27c-6.78-0.05-12.07,5.13-12.15,11.88\n\t\tC129.74,96.74,134.82,102.03,141.57,102.13z'\n      />\n      <path\n        className='logo-color-2'\n        d='M78.19,130.02c0.23,2.95,0.45,5.9,0.68,8.85c-0.42,1.34-0.84,2.69-1.26,4.03c-4.87,7.52-11.75,9.94-20.34,7.97\n\t\tc-1.3-0.75-2.61-1.49-3.91-2.24c-6.37-6.28-6.91-13.58-3.79-21.53c1.65-0.63,2.15-2.27,3.08-3.53c2.78-1.17,5.55-2.34,8.32-3.51\n\t\tc1.6,0.02,3.2,0.05,4.8,0.07c3.82,1.19,7.16,3.2,10.04,5.98C76.6,127.41,77.4,128.71,78.19,130.02z M73.96,135.95\n\t\tc-0.01-5.97-4.68-10.76-10.65-10.89c-5.66-0.13-10.96,4.94-11.12,10.63c-0.16,5.86,5.22,11.27,11.09,11.16\n\t\tC69.2,146.73,73.97,141.86,73.96,135.95z'\n      />\n      <path\n        className='logo-color-3'\n        d='M58.07,30.98c7.22-0.57,14.19-0.41,18.88,6.44c0.61,1.48,1.22,2.95,1.83,4.43c0.06,3,0.12,6,0.17,9.01\n\t\tc-2.22,0.23-2.48,2.61-3.98,3.63c-2.38,2.65-5.25,4.34-8.87,4.59c-1.73-0.03-3.45-0.07-5.18-0.1c-2.29-1.14-4.57-2.28-6.86-3.42\n\t\tc-0.35-1.81-1.55-2.61-3.28-2.78c0.53-1.28,0.49-2.58,0.07-3.86c-1.98-5.88,0.56-10.52,4.01-14.92\n\t\tC56.19,33.26,57.88,32.91,58.07,30.98z M64.39,54.12c5.39,0.04,9.62-4.09,9.56-9.34c-0.06-5-4.21-9.09-9.28-9.12\n\t\tc-5.37-0.03-9.67,4.15-9.61,9.37C55.13,50.04,59.27,54.08,64.39,54.12z'\n      />\n      <path\n        className='logo-color-4'\n        d='M60.93,58.97c1.73,0.03,3.45,0.07,5.18,0.1c-0.07,2.15-0.19,4.3-0.2,6.44c-0.06,18.2-0.1,36.41-0.14,54.61\n\t\tc-1.6-0.02-3.2-0.05-4.8-0.07C60.96,99.7,60.94,79.33,60.93,58.97z'\n      />\n      <path\n        className='logo-color-5'\n        d='M78.19,130.02c-0.79-1.31-1.59-2.61-2.38-3.92c1.26-0.79,2.51-1.61,3.79-2.36\n\t\tc15.31-8.96,30.62-17.9,45.93-26.85c1.38,1.04,2.24,2.43,2.74,4.07C111.89,111.18,95.06,120.64,78.19,130.02z'\n      />\n      <path\n        className='logo-color-5'\n        d='M74.98,54.48c1.5-1.02,1.76-3.39,3.98-3.63c12.79,6.41,24.89,14.06,37.33,21.09c4.05,2.29,7.97,4.79,11.95,7.2\n\t\tc-0.47,1.46-1.07,2.84-2.24,3.89c-7.19-4.08-14.34-8.22-21.58-12.21C94.59,65.41,85.26,59.08,74.98,54.48z'\n      />\n    </g>\n  </svg>\n)\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport get from 'lodash/get'\n\nexport const BRIDGE_IS_CONFIGURED = gql`\n  query BridgeIsConfigured {\n    isConfigured\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={BRIDGE_IS_CONFIGURED}>{\n    ({ data, loading, error }) => children({ data: get(data, 'isConfigured'), loading, error })\n  }</Query>\n)","import get from 'lodash/get'\n\nexport const parseError = (error) => (get(error, 'message') || '').replace(/GraphQL error: /, '')","import React, { useRef, useState } from 'react'\nimport { TextInput } from '@xyo-network/tool-storybook-react/dist/lib/Form'\nimport { parseError } from '../../gql/error'\nimport { setPin } from '../../pin'\n\nexport default () => {\n  const [error, setError] = useState('')\n  const ref = useRef()\n  const onSubmit = async (ev) => {\n    ev.preventDefault()\n    const target = ev.target\n    const value = ev.target.password.value\n    try {\n      await setPin(value)\n    } catch (e) {\n      setError(parseError(e))\n      target.password.value = ''\n      target.password.focus()\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <TextInput \n          name='password' \n          type='password' \n          placeholder='Enter Password' \n          className='text-white' \n          inputClassName='px-2'\n          autoFocus \n        />\n        <button className='btn btn-info w-100'>Login</button>\n      </form>\n      <p className='text-danger text-center'>{error}</p>\n    </>\n  )\n}","import React, { useRef, useState } from 'react'\nimport { TextInput } from '@xyo-network/tool-storybook-react/dist/lib/Form'\nimport { parseError } from '../../gql/error'\nimport { configurePin } from '../../pin'\n\nexport default () => {\n  const [error, setError] = useState('')\n  const onSubmit = async (ev) => {\n    ev.preventDefault()\n    const target = ev.target\n    const password = target.password.value.trim()\n    const confirmPassword = target.confirmPassword.value.trim()\n    try {\n      if (!password) throw new Error('Password is required')\n      if (password !== confirmPassword) throw new Error('Passwords do not match')\n      await configurePin(password)\n    } catch (e) {\n      setError(parseError(e))\n      target.password.value = ''\n      target.confirmPassword.value = ''\n      target.password.focus()\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <TextInput \n          name='password' \n          type='password' \n          placeholder='Enter Password' \n          className='text-white' \n          inputClassName='px-2'\n          autoFocus \n        />\n        <TextInput \n          name='confirmPassword' \n          type='password' \n          placeholder='Confirm Password' \n          className='text-white' \n          inputClassName='px-2'\n        />\n        <button className='btn btn-info w-100' type='submit'>Continue</button>\n      </form>\n      <p className='text-danger text-center'>{error}</p>\n    </>\n  )\n}","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const BRIDGE_NETWORK_STATUS = gql`\n  query BridgeNetworkStatus {\n    ip\n    network {\n      ssid\n      ip\n    }\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={BRIDGE_NETWORK_STATUS} errorPolicy='none' pollInterval={10000}>{ children }</Query>\n)","import get from 'lodash/get'\n\nexport default ({ data, loading, error }) => {\n  if (error) return 'offline'\n  if (loading) return 'connecting'\n  if (!get(data, 'network.ip')) return 'offline'\n  return 'connected'\n}","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const BRIDGE_NETWORK = gql`\n  query BridgeNetwork {\n    scan {\n      ssid\n      ip\n    }\n    network {\n      ssid\n      ip\n    }\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={BRIDGE_NETWORK} notifyOnNetworkStatusChange={true} errorPolicy='none'>{ children }</Query>\n)","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Mutation } from 'react-apollo'\nimport { ABOUT_BRIDGE } from '../queries/about'\nimport { BRIDGE_NETWORK } from '../queries/network'\nimport { BRIDGE_NETWORK_STATUS } from '../queries/networkStatus'\n\nexport const CONNECT_BRIDGE_WIFI = gql`\n  mutation ConnectBridgeWifi($ssid: String, $password: String, $pin: String) {\n    connect(ssid: $ssid, password: $password, pin: $pin)\n  }\n`\n\nexport default ({ children, update }) => (\n  <Mutation \n    update={update} \n    mutation={CONNECT_BRIDGE_WIFI} \n    refetchQueries={[\n      { query: ABOUT_BRIDGE },\n      { query: BRIDGE_NETWORK },\n      { query: BRIDGE_NETWORK_STATUS },\n    ]}\n  >\n    { children }\n  </Mutation>\n)","import React, { useState, Fragment } from 'react'\nimport BridgeNetwork from '../../gql/queries/network'\nimport ConnectBridgeWifi from '../../gql/mutations/connect'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal'\nimport Select from '@xyo-network/tool-storybook-react/dist/lib/Form/Select'\nimport Text from '@xyo-network/tool-storybook-react/dist/lib/Form/Text'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport { parseError } from '../../gql/error'\nimport identity from 'lodash/identity'\nimport uniq from 'lodash/uniq'\nimport get from 'lodash/get'\n\nexport default ({ open, closeModal }) => {\n  const [selected, selectNetwork] = useState('')\n  const onSubmit = connect => ev => {\n    ev.preventDefault()\n    const password = ev.target.password.value\n    connect({ \n      variables: { \n        ssid: selected, \n        password \n      }\n    })\n  }\n  return (\n    <Modal open={open} onClose={closeModal}>\n      <BridgeNetwork>\n        {({ data, loading: aboutLoading, error: aboutError, refetch, networkStatus }) => \n          <ModalContent\n            onClose={closeModal}\n            className='overflow-hidden'\n            headerClassName='bg-info text-white'\n            title={\n              aboutLoading\n              ? '' \n              : get(data, 'network.ssid') \n              ? `Connected to ${get(data, 'network.ssid')}`\n              : 'Select a network'\n            }>\n              <Fragment>\n                <Alert type={'danger'}>{parseError(aboutError)}</Alert>\n                <ConnectBridgeWifi update={closeModal}>\n                  {(connect, { loading, error }) => (\n                    <form onSubmit={onSubmit(connect)}>\n                      <Alert type={'danger'}>{parseError(error)}</Alert>\n                      {\n                        aboutLoading\n                        ? <div className='text-center'><Loader /></div>\n                        : <div className='d-flex'>\n                            <Select\n                              className='flex-grow-1'\n                              label='Wifi Name'\n                              options={uniq(['Choose a network'].concat((get(data, 'scan') || []).map(({ ssid }) => ssid).filter(identity)))}\n                              value={selected}\n                              onChange={selectNetwork}\n                            />\n                            <button \n                              type='button'\n                              className='btn' \n                              onClick={() => refetch()}\n                            >Refresh</button>\n                          </div>\n                      }\n                      {\n                        selected \n                        ? (\n                          <Text label='Wifi Password' name='password' type='password' />\n                        ) \n                        : ''\n                      }\n                      {\n                        loading\n                        ? <Loader />\n                        : selected\n                        ? <button \n                            type='submit'\n                            className='btn btn-primary' \n                          >Submit</button>\n                        : ''\n                      }\n                    </form>\n                  )}\n                </ConnectBridgeWifi>\n              </Fragment>\n          </ModalContent>\n        }\n      </BridgeNetwork>\n    </Modal>\n  )\n}","import React, { useState, Fragment } from 'react'\nimport WifiIcon from '@xyo-network/tool-storybook-react/dist/lib/Icons/Wifi'\nimport BridgeNetworkStatus from '../../gql/queries/networkStatus'\nimport responseToStatus from './responseToStatus'\nimport ConnectToWifi from '../ConnectToWifi'\n\nexport default ({ onClick }) => {\n  const [open, setModal] = useState(false)\n  const setModalOpen = () => setModal(true)\n  const setModalClosed = () => setModal(false)\n  return (\n    <Fragment>\n      <BridgeNetworkStatus>\n        {({ data, loading, error }) => (\n          <button className='bg-transparent text-white border-0 cursor-pointer m-2' onClick={setModalOpen}>\n            <WifiIcon status={responseToStatus({ data, loading, error })} className='medium-icon' />\n          </button>\n        )}\n      </BridgeNetworkStatus>\n      <ConnectToWifi open={open} closeModal={setModalClosed} />\n    </Fragment>\n  )\n}","import React, { Fragment, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { parseError } from '../../gql/error'\nimport { usePinProvider } from '../../pin'\nimport BridgeNetworkStatus from '../../gql/queries/networkStatus'\nimport WifiStatus from '../WifiStatus'\nimport Logo from '../Logo'\nimport cx from 'classnames'\nimport identity from 'lodash/identity'\nimport get from 'lodash/get'\nimport './index.css'\n\nconst networkStatusText = (data) => {\n  if (!data) return data\n  const ssid = get(data, 'network.ssid')\n  const ip = get(data, 'network.ip')\n  return [ssid, ip].filter(identity).join(' ')\n}\n\nconst Navbar = ({\n  goBack,\n  history,\n  hidden,\n  transparent,\n}) => {\n  const onGoBack = () => history && history.goBack()\n  const goHome = () => history && history.push('/')\n  const [menu, setMenu] = useState(false)\n  const setMenuClosed = () => setMenu(false)\n  const toggleMenu = () => setMenu(!menu)\n\n  return (\n    <Fragment>\n      <nav\n        className={cx(\n          'navbar navbar-expand navbar-dark bg-md-secondary border-0 w-100 p-0',\n          {\n            'navbar-hidden': hidden,\n            'bg-primary': !transparent,\n          }\n        )}\n      >\n        <div className='d-flex navbar-brand align-items-center px-2'>\n          <a onClick={goHome} className='text-white no-underline cursor-pointer'>\n            <Logo className='pr-1' style={{ height: 32 }} /> XYO Bridge{' '}\n          </a>\n        </div>\n        <div className='collapse navbar-collapse align-self-stretch align-items-stretch'>\n          <div className='navbar-nav'>\n          </div>\n          <div className='d-flex navbar-nav ml-auto align-items-center'>\n            <BridgeNetworkStatus>\n              {({ data, loading, error }) => \n                loading\n                ? ''\n                : error\n                ? <p className='text-danger mb-0 pr-2'>{parseError(error)}</p>\n                : <p className='text-white mb-0 pr-2'>{networkStatusText(data)}</p>\n              }\n            </BridgeNetworkStatus>\n            <WifiStatus />\n          </div>\n        </div>\n      </nav>\n      <div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React from 'react'\nimport { Page, Main } from '../../components/Layout'\nimport {\n  SlideInUp,\n  SlideInDown,\n} from '@xyo-network/tool-storybook-react/dist/lib/Animate'\nimport Logo from '../../components/Logo'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport IsConfigured from '../../gql/queries/isConfigured'\nimport PinInput from '../../components/PinInput'\nimport PasswordInput from '../../components/PasswordInput'\nimport PasswordConfiguration from '../../components/PasswordConfiguration'\nimport { parseError } from '../../gql/error'\nimport Navbar from '../../components/Navbar'\n\nexport default  () => {\n  return (\n    <Page>\n      <Main>\n        <div className='col mb-5' />\n        <SlideInDown timer={300}>\n          <div className='text-center mb-2'>\n            <Logo />\n          </div>\n          <h4 className='text-white text-center'>XYO BRIDGE</h4>\n        </SlideInDown>\n        <IsConfigured>\n          {({ loading, error, data }) => (\n            loading\n            ? <div className='text-center'><Loader /></div>\n            : error\n            ? <p className='text-center text-danger'>{parseError(error)}</p>\n            : data\n            ? (\n              <SlideInUp timer={300}>\n                <PasswordInput />\n              </SlideInUp>\n            )\n            : (\n              <SlideInUp timer={300}>\n                <PasswordConfiguration />\n              </SlideInUp>\n            )\n          )}\n        </IsConfigured>\n        <div className='col mb-4' />\n      </Main>\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { updatedPaymentKey } from '../../gql/cache'\nimport gql from 'graphql-tag'\nimport over from 'lodash/over'\n\nconst SET_PAYMENT_KEY = gql`\n  mutation SetPaymentKey($paymentKey: String) {\n    setPaymentKey (paymentKey: $paymentKey)\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={SET_PAYMENT_KEY} update={over(updatedPaymentKey, update)}>\n    {children}\n  </Mutation>\n)","import React, { useState, useEffect, Fragment } from 'react'\nimport SetPaymentKey from '../../gql/mutations/setPaymentKey'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal'\nimport Text from '@xyo-network/tool-storybook-react/dist/lib/Form/Text'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport Web3 from 'web3'\nimport { parseError } from '../../gql/error'\nimport first from 'lodash/first'\n\nexport default () => {\n  const [open, setOpen] = useState('')\n  const [paymentKey, setPaymentKey] = useState('')\n  const [address, setWeb3Address] = useState('')\n  const [web3Error, setWeb3Error] = useState('')\n  const closeModal = () => setOpen(false)\n  const openModal = () => setOpen(true)\n  const onSubmit = updatePaymentKey => ev => {\n    ev.preventDefault()\n    updatePaymentKey({ \n      variables: { \n        paymentKey\n      }\n    })\n  }\n  const loadAccount = async () => {\n    try {\n      if (window.ethereum) await window.ethereum.enable()\n      const provider = (\n        window.ethereum\n        ? window.ethereum\n        : window.web3 && window.web3.currentProvider\n        ? window.web3.currentProvider\n        : null\n      )\n      const web3 = new Web3(provider)\n      const accounts = await web3.eth.getAccounts()\n      const address = (first(accounts) || '').replace(/^0x/, '')\n      setWeb3Address(address)\n    } catch (e) {\n      setWeb3Error(e.message)\n    }\n  }\n\n  useEffect(() => {\n    // if (!open) return\n    // if (!window.web3 || !window.ethereum) return\n    // if (open) loadAccount()\n  }, [open])\n\n  return (\n    <>\n    <button className='btn btn-primary' onClick={openModal}>Change</button>\n    <Modal open={open} onClose={closeModal}>\n      <ModalContent\n        className='overflow-hidden'\n        headerClassName='bg-info text-white'\n        title={'Set Payment Key'}\n      >\n        <Fragment>\n          <SetPaymentKey update={closeModal}>\n            {(updatePaymentKey, { loading, error }) => (\n              <>\n              <Alert type={'danger'}>{parseError(error) || web3Error}</Alert>\n              <Alert type={'secondary'}>\n                {\n                  !address || paymentKey === address\n                  ? \"\"\n                  : (\n                    <>\n                    <p className='mb-0'>MetaMask Address</p>\n                    <div className='d-flex align-items-center'>\n                      <span className='hash-overflow'>{address}</span>\n                      <div className='col' />\n                      <button \n                        onClick={() => setPaymentKey(address)}\n                        className='btn btn-primary'\n                      >Use</button>\n                    </div>\n                    </>\n                  )\n                }\n              </Alert>\n              <Alert type={'secondary'}>Coming Soon</Alert>\n              {/* <form onSubmit={onSubmit(updatePaymentKey)}>\n                <Text name='paymentKey' label='Payment Key' onChange={(v) => setPaymentKey(v)} value={paymentKey} />\n                {\n                  loading\n                  ? <Loader />\n                  : <button \n                      type='submit'\n                      className='btn btn-primary' \n                    >Submit</button>\n                }\n              </form> */}\n              </>\n            )}\n          </SetPaymentKey>\n        </Fragment>\n      </ModalContent>\n    </Modal>\n    </>\n  )\n}","import React from 'react'\nimport { SlideInUp } from '@xyo-network/tool-storybook-react/dist/lib/Animate'\nimport cx from 'classnames'\n\nexport default ({ className, text, icon }) => (\n  <div className={cx('mb-4', className)}>\n    <div className='text-center pt-5'>\n      <SlideInUp>{icon}</SlideInUp>\n      <SlideInUp timer={200}>\n        <h4 className='mb-0 text-capitalize-first'>{text}</h4>\n      </SlideInUp>\n    </div>\n  </div>\n)","import React from 'react'\nimport { useBlockyImage } from '@xyo-network/tool-storybook-react/dist/lib/Blockie'\nimport Card, { CardBody, CardImage } from '@xyo-network/tool-storybook-react/dist/lib/Card'\nimport get from 'lodash/get'\nimport './index.css'\n\nexport default ({ archivist, onClick }) => {\n  const id = get(archivist, 'id')\n  const src = useBlockyImage(id)\n  return (\n    <Card>\n      <div onClick={onClick} className='cursor-pointer'>\n          <div className='text-center mt-3 mx-3'>\n            <img className='device-img' src={src} alt={id} />\n          </div>\n          <div className='card-body'>\n            <div className='card-title hash-overflow mb-0'>{get(archivist, 'dns')}</div>\n            <div className='card-title mb-0'>{get(archivist, 'port')}</div>\n          </div>\n      </div>\n    </Card>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { attachedArchivist } from '../../gql/cache'\nimport gql from 'graphql-tag'\nimport over from 'lodash/over'\n\nconst ATTACH_ARCHIVIST = gql`\n  mutation AttachArchivist($dns: String, $port: Int) {\n    attachArchivist (dns: $dns, port: $port) {\n      id\n      dns\n      port\n    }\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={ATTACH_ARCHIVIST} update={over(attachedArchivist, update)}>\n    {children}\n  </Mutation>\n)","import React, { useState } from 'react'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal';\nimport { TextInput, NumberInput } from '@xyo-network/tool-storybook-react/dist/lib/Form'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport AttachArchivist from '../../gql/mutations/attachArchivist'\nimport { parseError } from '../../gql/error'\nimport over from 'lodash/over'\n\nconst preventDefault = fn => ev => {\n  if (ev) ev.preventDefault()\n  fn(ev)\n}\n\nexport default ({ onSuccess }) => {\n  const [open, setOpen] = useState(false)\n  const setModalOpen = () => setOpen(true)\n  const setModalClosed = () => setOpen(false)\n  return (\n    <>\n      <button className='btn btn-outline-primary' onClick={setModalOpen}>\n        <i className='fa fa-plus mr-1' /> Connect More Archivists\n      </button>\n      <Modal open={open} onClose={setModalClosed}>\n        <ModalContent \n          className='overflow-hidden'\n          headerClassName='bg-info text-white' \n          title='Add Archivist'>\n          <AttachArchivist\n            update={over([setModalClosed, onSuccess])}\n          >\n            {(attachArchivist, { loading, error }) => (\n              <form\n                onSubmit={preventDefault(ev =>\n                  attachArchivist({\n                    variables: {\n                      dns: ev.target.dns.value,\n                      port: Number(ev.target.port.value),\n                    },\n                  })\n                )}\n              >\n                <TextInput label='IP address or DNS name' name='dns' />\n                <NumberInput label='Port' name='port' />\n                <Alert type={'danger'}>{parseError(error)}</Alert>\n                {loading ? (\n                  <Loader />\n                ) : (\n                  <button className='btn btn-primary' type='submit'>\n                    Save\n                  </button>\n                )}\n              </form>\n            )}\n          </AttachArchivist>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { detachedArchivist } from '../../gql/cache'\nimport gql from 'graphql-tag'\nimport over from 'lodash/over'\n\nconst DETACH_ARCHIVIST = gql`\n  mutation DetachArchivist($id: String) {\n    detachArchivist (id: $id) {\n      id\n    }\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={DETACH_ARCHIVIST} update={over(detachedArchivist, update)}>\n    {children}\n  </Mutation>\n)","import React from 'react'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal';\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport DetachArchivist from '../../gql/mutations/detachArchivist'\nimport { parseError } from '../../gql/error'\nimport get from 'lodash/get'\n\nexport default ({ archivist, onClose }) => {\n  return (\n    <>\n      <Modal open={!!archivist} onClose={onClose}>\n        <ModalContent \n          className='overflow-hidden'\n          headerClassName='bg-info text-white' \n          title='Edit Archivist'>\n          <DetachArchivist\n            update={onClose}\n          >\n            {(detachArchivist, { loading, error }) => (\n              <div>\n                <Alert type={'danger'}>{parseError(error)}</Alert>\n                {loading ? (\n                  <Loader />\n                ) : (\n                  <>\n                    <div className='mb-3'>\n                      <div className='d-flex'>\n                        <strong>DNS</strong>\n                        <div className='col' />\n                        <span>{get(archivist, 'dns')}</span>\n                      </div>\n                      <div className='d-flex'>\n                        <strong>Port</strong>\n                        <div className='col' />\n                          <span>{get(archivist, 'port')}</span>\n                      </div>\n                    </div>\n                    <button className='btn btn-primary mr-1' onClick={onClose}>\n                      Cancel\n                    </button>\n                    <button className='btn btn-danger' onClick={() => detachArchivist({ variables: { id: get(archivist, 'id') } })}>\n                      Remove\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n          </DetachArchivist>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import React, { useState } from 'react'\nimport ConnectedArchivists from '../../gql/queries/archivists'\nimport NoneFound from '../../components/NoneFound'\nimport Archivist from '../../components/Archivist'\nimport AddArchivist from '../../components/AddArchivist'\nimport UpdateArchivist from '../../components/UpdateArchivist'\nimport ArchivistIcon from '@xyo-network/tool-storybook-react/dist/lib/Icons/Archivist'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport size from 'lodash/size'\nimport get from 'lodash/get'\n\nexport default () => {\n  const [archivist, setArchivist] = useState(null)\n  const setClosed = () => setArchivist(null)\n  return (\n    <div className='mb-5'>\n      <h4>Connected Archivists</h4>\n      <ConnectedArchivists>\n        {({ data, loading, error }) => (\n          <div className='row'>\n            {\n              loading\n              ? (\n                <div className='text-center'>\n                  <Loader />\n                </div>\n              )\n              : size(get(data, 'archivists'))\n              ? get(data, 'archivists').map((archivist, i) => (\n                <div className='col-6 col-md-4 col-lg-3 mb-4' key={i}>\n                  <Archivist archivist={archivist} onClick={() => setArchivist(archivist)} />\n                </div>\n              ))\n              : <NoneFound  \n                  className='mx-auto'\n                  icon={<ArchivistIcon className='large-icon' />}\n                  text={'No archivists found'} \n                />\n            }\n          </div>\n        )}\n      </ConnectedArchivists>\n      <div className='text-center'>\n        <AddArchivist />\n      </div>\n      <UpdateArchivist archivist={archivist} onClose={setClosed} />\n    </div>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { claimedBridge } from '../cache'\nimport accountClient from '../accountClient'\nimport over from 'lodash/over'\nimport gql from 'graphql-tag'\n\nexport const CLAIM_BRIDGE = gql`\n  mutation ClaimBridge(\n    $id: String!\n    $name: String\n    $photoUrl: String\n    $publicKey: String\n    $uuid: String\n    $major: Int\n    $minor: Int\n    $dns: String\n    $port: Int\n  ) {\n    addBridge(\n      address: {\n        id: $id\n        publicKey: $publicKey\n        name: $name\n        photoUrl: $photoUrl\n        dns: $dns\n        port: $port\n      }\n      bridge: { uuid: $uuid, major: $major, minor: $minor }\n    ) {\n      id\n      name\n      owner\n      photoUrl\n      publicKey\n      multiaddr\n      dns\n      port\n    }\n  }\n`\n\nexport default ({ update, children, variables }) => (\n  <Mutation client={accountClient} mutation={CLAIM_BRIDGE} update={over([claimedBridge, update])} variables={variables}>\n    {children}\n  </Mutation>\n)","import React, { useState } from 'react'\nimport { useXyAccountContext } from '@xyo-network/tool-storybook-react/dist/lib/auth/context'\nimport { useBlockyImage } from '@xyo-network/tool-storybook-react/dist/lib/Blockie'\nimport get from 'lodash/get'\n\nexport default ({ onLogout }) => {\n  const xya = useXyAccountContext()\n  const [user, setCurrentUser] = useState(xya.currentUser())\n  const uid = get(user, 'uid')\n  const blocky = useBlockyImage(uid)\n  const signOut = async () => {\n    await xya.signOut()\n    setCurrentUser(null)\n    onLogout && onLogout()\n  }\n  return user\n  ? <div className='d-flex'>\n    <div\n      className='position-relative bg-dark rounded m-auto mb-2 d-flex align-items-center justify-content-center overflow-hidden'\n      style={{ height: 60, width: 60 }}\n    ><img src={blocky} className='w-100' /></div>\n    <div className='col'>\n      <p className='mb-0'>{get(user, 'displayName')}</p>\n      <a onClick={signOut} className='cursor-pointer'><u>Logout</u></a>\n    </div>\n  </div>\n  : ''\n}","import React, { useState } from 'react'\nimport { useXyAccountContext } from '@xyo-network/tool-storybook-react/dist/lib/auth/context'\nimport { SlideInUp, SlideInDown } from '@xyo-network/tool-storybook-react/dist/lib/Animate'\nimport Login from '@xyo-network/tool-storybook-react/dist/lib/auth/Login'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport ClaimBridge from '../../gql/mutations/claimBridge'\nimport UserInfo from '../UserInfo'\nimport { parseError } from '../../gql/error'\n\nexport default ({ dns, port, publicKey }) => {\n  const xya = useXyAccountContext()\n  const [user, setCurrentUser] = useState(xya.currentUser())\n  return (\n    <div>\n      <SlideInDown>\n        <h4>Claim This Bridge</h4>\n      </SlideInDown>\n      <UserInfo onLogout={() => setCurrentUser(null)} />\n      <ClaimBridge variables={{ dns, port, id: publicKey, publicKey }}>\n        {(claimBridge, { loading, error, data }) => \n          loading\n          ? <div className='mt-3'>\n            <Loader />\n            </div>\n          : error\n          ? <div className='mt-3'>\n            <p className='mb-0'>{parseError(error)}</p>\n            </div>\n          : user\n          ? (\n            <SlideInUp>\n            <div className='mt-3'>\n              <button className='btn btn-info' onClick={claimBridge}>Claim</button>\n            </div>\n            </SlideInUp>\n          )\n          : (\n            <SlideInUp>\n            <Login \n              onSuccess={claimBridge} \n              buttonClassName='btn-info' \n            />\n            </SlideInUp>\n          )\n        }\n      </ClaimBridge>\n    </div>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport { unclaimedBridge } from '../cache'\nimport accountClient from '../accountClient'\nimport over from 'lodash/over'\nimport gql from 'graphql-tag'\n\nexport const UNCLAIM_BRIDGE = gql`\n  mutation UnclaimBridge(\n    $id: String!\n  ) {\n    deleteBridge(\n      id: $id\n    ) {\n      id\n      name\n      owner\n      photoUrl\n      publicKey\n      multiaddr\n      dns\n      port\n    }\n  }\n`\n\nexport default ({ update, children, variables }) => (\n  <Mutation \n    client={accountClient} \n    mutation={UNCLAIM_BRIDGE} \n    update={over([unclaimedBridge, update])} \n    variables={variables}\n  >\n    {children}\n  </Mutation>\n)","import React, { useState } from 'react'\nimport { useXyAccountContext } from '@xyo-network/tool-storybook-react/dist/lib/auth/context'\nimport { SlideInUp, SlideInDown } from '@xyo-network/tool-storybook-react/dist/lib/Animate'\nimport Login from '@xyo-network/tool-storybook-react/dist/lib/auth/Login'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport UnClaimBridge from '../../gql/mutations/unclaimBridge'\nimport { parseError } from '../../gql/error'\nimport get from 'lodash/get'\nimport UserInfo from '../UserInfo';\n\nexport default ({ bridge }) => {\n  const id = get(bridge, 'id')\n  const owner = get(bridge, 'owner')\n  const xya = useXyAccountContext()\n  const [user, setCurrentUser] = useState(xya.currentUser())\n  const uid = get(user, 'uid')\n  const isOwner = owner === uid\n\n  if (!user) {\n    return (\n      <SlideInUp>\n        <Login \n          onSuccess={() => setCurrentUser(xya.currentUser())} \n          buttonClassName='btn-info' \n        />\n      </SlideInUp>\n    )\n  }\n  return (\n    <>\n    <SlideInDown>\n      <h4>Bridge Owner</h4>\n    </SlideInDown>\n    <UserInfo onLogout={() => setCurrentUser(null)} />\n    <div className='mt-3'>\n    {\n      isOwner\n      ? (\n        <UnClaimBridge variables={{ id }}>\n          {(unclaimBridge, { loading, error, data }) => \n            loading\n            ? <Loader />\n            : error\n            ? <p className='text-danger'>{parseError(error)}</p>\n            : <SlideInUp>\n              <button className='btn btn-info' onClick={unclaimBridge}>Unclaim</button>\n            </SlideInUp>\n          }\n        </UnClaimBridge>\n      )\n      : (\n        <p className='text-danger'>The current account does not own this bridge</p>\n      )\n    }\n    </div>\n    </>\n  )\n}","import React, { Suspense, useState } from 'react'\nimport WifiIcon from '@xyo-network/tool-storybook-react/dist/lib/Icons/Wifi'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport { AddressByPublicKey } from '../../gql/queries/address'\nimport BridgeNetworkStatus from '../../gql/queries/networkStatus'\nimport responseToStatus from '../WifiStatus/responseToStatus'\nimport ClaimBridge from '../ClaimBridge'\nimport BridgeOwner from '../BridgeOwner'\nimport ConnectToWifi from '../ConnectToWifi'\nimport { SlideInLeft } from '@xyo-network/tool-storybook-react/dist/lib/Animate';\nimport { parseError } from '../../gql/error'\nimport get from 'lodash/get'\n\nconst CenterLoader = () => (\n  <div className='text-center py-3'>\n    <Loader />\n  </div>\n)\n\nexport default ({ publicKey }) => {\n  const [open, setModal] = useState(false)\n  const setModalClosed = () => setModal(false)\n  const setModalOpen = () => setModal(true)\n  return (\n    <div className='card bg-primary text-white overflow-hidden'>\n      <div className='card-body'>\n        <BridgeNetworkStatus>\n          {({ data, loading, error }) => {\n            const status = responseToStatus({ data, loading, error })\n            const isOffline = status !== 'connected'\n            const dns = get(data, 'network.ip')\n            const port = 13000\n            if (isOffline) return (\n              <SlideInLeft>\n                <div className='text-center py-3'>\n                  <WifiIcon status={status} className='large-icon' />\n                  <p>Connect to Wifi in order to claim this bridge</p>\n                  <button className='btn btn-outline-light' onClick={setModalOpen}>Connect</button>\n                </div>\n              </SlideInLeft>\n            )\n            return (\n              <AddressByPublicKey variables={{ publicKey }} skip={!publicKey}>\n                {({ data, loading, error }) => (\n                    loading\n                    ? <CenterLoader />\n                    : error\n                    ? <p className='text-danger mb-0'>{parseError(error)}</p>\n                    : data\n                    ? <Suspense fallback={<CenterLoader />}>\n                        <BridgeOwner bridge={data} />\n                      </Suspense>\n                    : <Suspense fallback={<CenterLoader />}>\n                      <ClaimBridge dns={dns} port={port} publicKey={publicKey} />\n                    </Suspense>\n                )}\n              </AddressByPublicKey>\n            )\n          }}\n        </BridgeNetworkStatus>\n        </div>\n        <ConnectToWifi open={open} closeModal={setModalClosed} />\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal'\nimport { TextInput } from '@xyo-network/tool-storybook-react/dist/lib/Form'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport UpdatePin from '../../gql/mutations/updatePin'\nimport { parseError } from '../../gql/error'\n\nexport default ({ className }) => {\n  const [open, setModal] = useState(false)\n  const setOpen = () => setModal(true)\n  const setClosed = () => setModal(false)\n  const onSubmit = (updatePin) => (ev) => {\n    ev.preventDefault()\n    const oldPin = ev.target.oldPin.value\n    const newPin = ev.target.newPin.value\n    updatePin({\n      variables: {\n        oldPin,\n        newPin\n      }\n    })\n  }\n  return (\n    <>\n      <a className={className} onClick={setOpen}>Edit Password</a>\n      <Modal open={open} onClose={setClosed}>\n        <ModalContent \n          className='overflow-hidden'\n          headerClassName='bg-info text-white' \n          title='Edit Password'>\n          <UpdatePin update={setClosed}>\n            {(updatePin, { loading, error }) => (\n              <div>\n                <Alert type={'danger'}>{parseError(error)}</Alert>\n                <form onSubmit={onSubmit(updatePin)} id='update-pin'>\n                  <TextInput name='oldPin' type='password' label='Old Password' />\n                  <TextInput name='newPin' type='password' label='New Password' />\n                </form>\n                {loading ? (\n                  <Loader />\n                ) : (\n                  <>\n                    <button className='btn btn-danger mr-1' onClick={setClosed}>\n                      Cancel\n                    </button>\n                    <button className='btn btn-primary' type='submit' form='update-pin'>\n                      Save\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n          </UpdatePin>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import React from 'react'\nimport {  Link } from 'react-router-dom'\nimport Logo from '../Logo'\nimport cx from 'classnames'\nimport UpdatePin from '../UpdatePin'\n\nexport const Footer = ({ className }) => {\n  return (\n    <div className={cx('footer bg-light', className)}>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-md-4 d-flex flex-column justify-content-center py-4'>\n            <div className='p-2 text-uppercase '>\n              <p className='mb-0'>account</p>\n            </div>\n            <Link\n              className='p-2 border-bottom d-block text-capitalize'\n              to='/about'\n            >about</Link>\n            <a\n              className='p-2 border-bottom d-block text-capitalize'\n              href={process.env.REACT_APP_TUTORIALS_URI || ''}\n              target='_blank'\n            >\n              tutorials\n            </a>\n            <a\n              className='p-2 border-bottom d-block text-capitalize'\n              href={process.env.REACT_APP_GET_HELP_URI || ''}\n              target='_blank'\n            >\n              get help\n            </a>\n          </div>\n          <div className='col-md-4 d-flex flex-column justify-content-center py-4'>\n            <div className='p-2 text-uppercase'>\n              <p className='mb-0'>privacy</p>\n            </div>\n            {/* <NavLink\n              className='p-2 border-bottom d-block text-capitalize'\n              to='/sharing'\n            >\n              sharing\n            </NavLink> */}\n            <a\n              className='p-2 border-bottom d-block text-capitalize'\n              href={process.env.REACT_APP_PRIVACY_URI || ''}\n              target='_blank'\n            >\n              privacy policy\n            </a>\n            <a\n              className='p-2 border-bottom d-block text-capitalize'\n              href={process.env.REACT_APP_TERMS_URI || ''}\n              target='_blank'\n            >\n              terms of Service\n            </a>\n            <UpdatePin className='p-2 border-bottom d-block text-capitalize cursor-pointer' />\n          </div>\n          <div className='col-md-4 d-flex flex-column justify-content-center text-center py-4'>\n            <Logo />\n            <h4 className='text-uppercase'>powered by xyo</h4>\n          </div>\n        </div>\n        <p className='mb-0 pb-2 text-center'>\n          &#169; 2019 XY The Persistent Company\n        </p>\n        <div className='clear-bottom d-md-none' />\n      </div>\n    </div>\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport AboutBridge from '../../gql/queries/about'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport { CopyHash } from '@xyo-network/tool-storybook-react/dist/lib/BoundWitness/Info'\nimport ConnectToWifi from '../../components/ConnectToWifi'\nimport SetPaymentKey from '../../components/SetPaymentKey'\nimport { usePinProvider } from '../../pin'\nimport Archivists from './Archivists'\nimport Navbar from '../../components/Navbar'\nimport Owner from '../../components/Owner'\nimport { Footer } from '../../components/Footer'\nimport get from 'lodash/get'\n\nexport default () => {\n  const [selected, selectNetwork] = useState(null)\n  const closeModal = () => selectNetwork(null)\n  usePinProvider()\n  return (\n  <>\n    {/* <ConnectToWifi selected={selected} onClose={closeModal} /> */}\n    <AboutBridge>\n      {({ data, loading, error }) => (\n        <>\n          <div className='jumbotron rounded-0 bg-primary text-center text-white'>\n            <h2 className='mb-0'>What Is My IP?</h2>\n            <h4 className='mb-0'>{get(data, 'network.ip')}</h4>\n          </div>\n          <div className='container'>\n            <Alert type='danger'>{get(error, 'message')}</Alert>\n            <div className='row flex-wrap-reverse'>\n              <div className='col-md-8'>\n                <div className='text-center'>\n                  {loading && <Loader /> }\n                </div>\n                <div className='jumbotron py-3'>\n                  <p className='mb-0'>Public Key</p>\n                  <CopyHash value={get(data, 'publicKey')} />\n                </div>\n                <div className='jumbotron py-3'>\n                  <p className='mb-0'>Payment Key</p>\n                  <CopyHash value={get(data, 'paymentKey')} />\n                  <SetPaymentKey />\n                </div>\n                <div className='mb-4'>\n                  <Archivists />\n                </div>\n              </div>\n              <div className='col-md-4'>\n                <div className='mb-4'>\n                  <Owner publicKey={get(data, 'publicKey')} />\n                </div>\n              </div>\n              </div>\n            </div>\n        </>\n      )}\n    </AboutBridge>\n    <Footer />\n  </>\n  );\n}\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const BRIDGE_VERSIONS = gql`\n  query BridgeVersions {\n    getNpmPackageVersion {\n      current\n      latest\n    }\n    getAptPackageVersion {\n      current\n      latest\n    }\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={BRIDGE_VERSIONS} notifyOnNetworkStatusChange={true}>{ children }</Query>\n)","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst FORCE_UPDATE = gql`\n  mutation ForceUpdate {\n    forceUpdate\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={FORCE_UPDATE} update={update}>\n    {children}\n  </Mutation>\n)","import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nexport const TAIL_UPGRADE = gql`\n  query TailUpgrade {\n    tailUnattendedUpgrade\n  }\n`\n\nexport default ({ children }) => (\n  <Query query={TAIL_UPGRADE} pollInterval={10000}>{ children }</Query>\n)","import React, { useState } from 'react'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal'\nimport { Collapsible } from '@xyo-network/tool-storybook-react/dist/lib/Collapse'\nimport CardHead from '@xyo-network/tool-storybook-react/dist/lib/Card/Head'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport ForceUpdate from '../../gql/mutations/forceUpdate'\nimport TailUpgrade from '../../gql/queries/tailUnattendedUpgrade'\nimport { parseError } from '../../gql/error'\nimport over from 'lodash/over'\nimport get from 'lodash/get'\n\nexport default ({ className, onSuccess }) => {\n  const [open, setOpen] = useState(false)\n  const [logs, setLogs] = useState(false)\n  const setModalOpen = () => setOpen(true)\n  const setModalClosed = () => setOpen(false)\n  const toggleLogs = () => setLogs(!logs)\n  return (\n    <>\n      <a className={className} onClick={setModalOpen}>Force Update</a>\n      <Modal open={open} onClose={setModalClosed}>\n        <ModalContent \n          className='overflow-hidden'\n          headerClassName='bg-info text-white' \n          title='Force Update'>\n          <ForceUpdate\n            update={over([onSuccess])}\n          >\n            {(forceUpdate, { loading, error, data }) => (\n              <div>\n                <Alert type={'danger'}>{parseError(error)}</Alert>\n                <div className='accordion mb-2'>\n                  <CardHead \n                    renderTitle={() => 'View Logs'} \n                    renderAction={() => <i className='fa fa-eye' />} \n                    onClick={toggleLogs} \n                  />\n                  <Collapsible show={logs}>\n                    <div className='p-2 bg-dark scroll' style={{ maxHeight: 400 }}>\n                      {logs && <TailUpgrade>\n                        {({ data }) => <pre className='text-white mb-0'>{get(data, 'tailUnattendedUpgrade')}</pre>}\n                      </TailUpgrade> }\n                    </div>\n                  </Collapsible>\n                </div>\n                {loading ? (\n                  <div className='text-center'>\n                    <Loader />\n                  </div>\n                ) : data\n                ? (\n                  <>\n                    <p>Update successful! Bridge has been scheduled to reboot</p>\n                    <button className='btn btn-primary' onClick={setModalClosed}>\n                      Close\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button className='btn btn-danger mr-1' onClick={setModalClosed}>\n                      Cancel\n                    </button>\n                    <button className='btn btn-primary' onClick={forceUpdate}>\n                      Confirm\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n          </ForceUpdate>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst LAST_RESORT = gql`\n  mutation LastResort {\n    lastResort\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={LAST_RESORT} update={update}>\n    {children}\n  </Mutation>\n)","import React, { useState } from 'react'\nimport Modal, { ModalContent } from '@xyo-network/tool-storybook-react/dist/lib/Modal'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport LastResort from '../../gql/mutations/lastResort'\nimport { parseError } from '../../gql/error'\nimport over from 'lodash/over'\n\nexport default ({ className, onSuccess }) => {\n  const [open, setOpen] = useState(false)\n  const setModalOpen = () => setOpen(true)\n  const setModalClosed = () => setOpen(false)\n  return (\n    <>\n      <a className={className} onClick={setModalOpen}>Last Resort</a>\n      <Modal open={open} onClose={setModalClosed}>\n        <ModalContent \n          className='overflow-hidden'\n          headerClassName='bg-info text-white' \n          title='Last Resort'>\n          <LastResort\n            update={over([onSuccess])}\n          >\n            {(lastResort, { loading, error, data }) => (\n              <div>\n                <Alert type={'danger'}>{parseError(error)}</Alert>\n                {loading ? (\n                  <div className='text-center'>\n                    <Loader />\n                  </div>\n                ) : data\n                ? (\n                  <>\n                    <p>Last resort is executing! Bridge has been scheduled to reboot.</p>\n                    <button className='btn btn-primary' onClick={setModalClosed}>\n                      Close\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button className='btn btn-danger mr-1' onClick={setModalClosed}>\n                      Cancel\n                    </button>\n                    <button className='btn btn-primary' onClick={lastResort}>\n                      Confirm\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n          </LastResort>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { BRIDGE_VERSIONS } from '../queries/versions'\n\nconst CHECK_FOR_UPDATES = gql`\n  mutation CheckForUpdates {\n    checkForUpdates\n  }\n`\n\nexport default ({ update, children }) => (\n  <Mutation mutation={CHECK_FOR_UPDATES} update={update}>\n    {children}\n  </Mutation>\n)\n\n// refetchQueries={() => [{ query: BRIDGE_VERSIONS, variables: {} }]}","import React, { useState } from 'react'\nimport CheckForUpdates from '../../gql/mutations/checkForUpdates'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\n\nexport default ({ className, onSuccess }) => {\n  return (\n    <CheckForUpdates update={onSuccess} >\n      {(checkForUpdates, { loading: updating }) => (\n        updating\n        ? <a className={className} >Pending...</a>\n        : <a className={className} onClick={checkForUpdates} >Refresh</a>\n    )}\n    </CheckForUpdates>\n  )\n}","import React from 'react'\nimport BridgeVersionsQuery from '../../gql/queries/versions'\nimport Loader from '@xyo-network/tool-storybook-react/dist/lib/Loader'\nimport Alert from '@xyo-network/tool-storybook-react/dist/lib/Alert'\nimport ForceUpdate from '../../components/ForceUpdate'\nimport LastResort from '../../components/LastResort'\nimport { Footer } from '../../components/Footer'\nimport { usePinProvider } from '../../pin'\nimport get from 'lodash/get'\nimport cx from 'classnames'\nimport CheckForUpdates from '../../components/CheckForUpdates';\n\nconst BridgeVersionMessage = ({ data, loading }) => {\n  if (loading) return (\n    <h4 className='text-center'>\n      <Loader /> \n    </h4>  \n  )\n\n  const aptCurrent = get(data, 'getAptPackageVersion.current')\n  const aptLatest = get(data, 'getAptPackageVersion.latest')\n  if (aptCurrent === aptLatest) {\n    return <h4>Your bridge is up to date</h4>\n  }\n  return <h4>Your bridge is out of date</h4>\n}\n\nconst BridgeVersions = ({ data }) => {\n  const aptCurrent = get(data, 'getAptPackageVersion.current')\n  const aptLatest = get(data, 'getAptPackageVersion.latest')\n  return (\n    <>\n      {/* <div>\n        **there is no reason to have npm version because that is contained in the apt**\n        <b className='pr-2'>Current NPM Version: </b>\n        <span className={cx({ \n          'text-danger': npmCurrent !== npmLatest\n        })}>{npmCurrent}</span>\n        <span className={cx('px-1', {\n          'd-none': npmCurrent === npmLatest,\n        })}>&#x3e;</span>\n        <span className={cx({\n          'd-none': npmCurrent === npmLatest,\n          'text-success': npmCurrent !== npmLatest\n        })}>{npmLatest}</span>\n      </div> */}\n      <div>\n        <b className='pr-2'>Current Version: </b>\n        <span className={cx({ \n          'text-danger': aptCurrent !== aptLatest \n        })}>{aptCurrent}</span>\n        <span className={cx('px-1', {\n          'd-none': aptCurrent === aptLatest,\n        })}>&#x3e;</span>\n        <span className={cx({\n          'd-none': aptCurrent === aptLatest,\n          'text-success': aptCurrent !== aptLatest \n        })}>{aptLatest}</span>\n      </div>\n    </>\n  )\n}\n\n// const BridgeUpdate = ({ loading }) => {\n//   if (loading) return <div />\n  // const npmCurrent = get(data, 'getNpmPackageVersion.current')\n  // const npmLatest = get(data, 'getNpmPackageVersion.latest')\n  // const aptCurrent = get(data, 'getAptPackageVersion.current')\n  // const aptLatest = get(data, 'getAptPackageVersion.latest')\n  // if (npmCurrent === npmLatest && aptCurrent === aptLatest) {\n  //   return <div />\n  // }\n//   return <ForceUpdate className='btn btn-danger text-white mt-2' />\n// }\n\nexport default ({}) => {\n  usePinProvider()\n  return (\n    <>\n      <BridgeVersionsQuery>\n        {({ data, loading, error, refetching, refetch }) => (\n          <div className='container mb-5 flex-grow-1'>\n            <div className='row'>\n              <div className='col-md-6 offset-md-3'>\n                <div className='card my-5'>\n                  <div className='card-body'>\n                    <Alert type='danger'>{get(error, 'message')}</Alert>\n                    <BridgeVersionMessage data={data} loading={loading || refetching} /> \n                    <BridgeVersions data={data} loading={loading || refetching} /> \n                    <ForceUpdate className='btn btn-danger text-white mt-2' />\n                    <CheckForUpdates className='btn btn-primary text-white ml-2 mt-2' onSuccess={refetch} />\n                  </div>\n                </div>\n                <div className='card mb-5'>\n                  <div className='card-body'>\n                    <h4>Last Resort Update</h4>\n                    <p>This cannot be undone and can have detrimental effects to your bridge.</p>\n                    <LastResort className='btn btn-danger text-white' />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </BridgeVersionsQuery>\n      <Footer />\n    </>\n  )\n}","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport About from './About'\n\nexport default () => (\n  <Switch>\n    <Route path='/' component={Dashboard} exact />\n    <Route path='/about' component={About} exact />\n  </Switch>\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport client from './gql/client'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>, \n  document.getElementById('root')\n)\n","import React, { Suspense } from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Login from './routes/Login'\nimport Routes from './routes'\nimport Navbar from './components/Navbar'\nimport { Page } from './components/Layout'\n\nexport default () => (\n  <HashRouter>\n    <Navbar />\n    <Suspense fallback={<Login />}>\n      <Routes />\n    </Suspense>\n  </HashRouter>\n)"],"sourceRoot":""}